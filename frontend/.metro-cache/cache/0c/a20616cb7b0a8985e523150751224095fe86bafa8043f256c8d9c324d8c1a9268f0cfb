{"dependencies":[{"name":"../constants.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":50,"index":50}}],"key":"w33QN4nlqAZn5CNK6M5HKbLWgBA=","exportNames":["*"]}},{"name":"../Parser.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":51},"end":{"line":2,"column":38,"index":89}}],"key":"CIJslq/MUqKep4ImmeyUTywuBTk=","exportNames":["*"]}},{"name":"../utils.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":91},"end":{"line":8,"column":21,"index":179}}],"key":"dGswK136diHRCgUa8xpQUn/UMbc=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.DateParser = void 0;\n  var _constants = require(_dependencyMap[0], \"../constants.js\");\n  var _Parser = require(_dependencyMap[1], \"../Parser.js\");\n  var _utils = require(_dependencyMap[2], \"../utils.js\");\n  const DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n  const DAYS_IN_MONTH_LEAP_YEAR = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n  // Day of the month\n  class DateParser extends _Parser.Parser {\n    priority = 90;\n    subPriority = 1;\n    parse(dateString, token, match) {\n      switch (token) {\n        case \"d\":\n          return (0, _utils.parseNumericPattern)(_constants.numericPatterns.date, dateString);\n        case \"do\":\n          return match.ordinalNumber(dateString, {\n            unit: \"date\"\n          });\n        default:\n          return (0, _utils.parseNDigits)(token.length, dateString);\n      }\n    }\n    validate(date, value) {\n      const year = date.getFullYear();\n      const isLeapYear = (0, _utils.isLeapYearIndex)(year);\n      const month = date.getMonth();\n      if (isLeapYear) {\n        return value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR[month];\n      } else {\n        return value >= 1 && value <= DAYS_IN_MONTH[month];\n      }\n    }\n    set(date, _flags, value) {\n      date.setDate(value);\n      date.setHours(0, 0, 0, 0);\n      return date;\n    }\n    incompatibleTokens = [\"Y\", \"R\", \"q\", \"Q\", \"w\", \"I\", \"D\", \"i\", \"e\", \"c\", \"t\", \"T\"];\n  }\n  exports.DateParser = DateParser;\n});","lineCount":46,"map":[[6,2,1,0],[6,6,1,0,"_constants"],[6,16,1,0],[6,19,1,0,"require"],[6,26,1,0],[6,27,1,0,"_dependencyMap"],[6,41,1,0],[7,2,2,0],[7,6,2,0,"_Parser"],[7,13,2,0],[7,16,2,0,"require"],[7,23,2,0],[7,24,2,0,"_dependencyMap"],[7,38,2,0],[8,2,4,0],[8,6,4,0,"_utils"],[8,12,4,0],[8,15,4,0,"require"],[8,22,4,0],[8,23,4,0,"_dependencyMap"],[8,37,4,0],[9,2,10,0],[9,8,10,6,"DAYS_IN_MONTH"],[9,21,10,19],[9,24,10,22],[9,25,10,23],[9,27,10,25],[9,29,10,27],[9,31,10,29],[9,33,10,31],[9,35,10,33],[9,37,10,35],[9,39,10,37],[9,41,10,39],[9,43,10,41],[9,45,10,43],[9,47,10,45],[9,49,10,47],[9,51,10,49],[9,53,10,51],[9,55,10,53],[9,57,10,55],[9,59,10,57],[9,61,10,59],[9,63,10,61],[9,65,10,63],[9,67,10,65],[9,69,10,67],[9,71,10,69],[9,72,10,70],[10,2,11,0],[10,8,11,6,"DAYS_IN_MONTH_LEAP_YEAR"],[10,31,11,29],[10,34,11,32],[10,35,12,2],[10,37,12,4],[10,39,12,6],[10,41,12,8],[10,43,12,10],[10,45,12,12],[10,47,12,14],[10,49,12,16],[10,51,12,18],[10,53,12,20],[10,55,12,22],[10,57,12,24],[10,59,12,26],[10,61,12,28],[10,63,12,30],[10,65,12,32],[10,67,12,34],[10,69,12,36],[10,71,12,38],[10,73,12,40],[10,75,12,42],[10,77,12,44],[10,79,12,46],[10,81,12,48],[10,82,13,1],[12,2,15,0],[13,2,16,7],[13,8,16,13,"DateParser"],[13,18,16,23],[13,27,16,32,"Parser"],[13,41,16,38],[13,42,16,39],[14,4,17,2,"priority"],[14,12,17,10],[14,15,17,13],[14,17,17,15],[15,4,18,2,"subPriority"],[15,15,18,13],[15,18,18,16],[15,19,18,17],[16,4,20,2,"parse"],[16,9,20,7,"parse"],[16,10,20,8,"dateString"],[16,20,20,18],[16,22,20,20,"token"],[16,27,20,25],[16,29,20,27,"match"],[16,34,20,32],[16,36,20,34],[17,6,21,4],[17,14,21,12,"token"],[17,19,21,17],[18,8,22,6],[18,13,22,11],[18,16,22,14],[19,10,23,8],[19,17,23,15],[19,21,23,15,"parseNumericPattern"],[19,47,23,34],[19,49,23,35,"numericPatterns"],[19,75,23,50],[19,76,23,51,"date"],[19,80,23,55],[19,82,23,57,"dateString"],[19,92,23,67],[19,93,23,68],[20,8,24,6],[20,13,24,11],[20,17,24,15],[21,10,25,8],[21,17,25,15,"match"],[21,22,25,20],[21,23,25,21,"ordinalNumber"],[21,36,25,34],[21,37,25,35,"dateString"],[21,47,25,45],[21,49,25,47],[22,12,25,49,"unit"],[22,16,25,53],[22,18,25,55],[23,10,25,62],[23,11,25,63],[23,12,25,64],[24,8,26,6],[25,10,27,8],[25,17,27,15],[25,21,27,15,"parseNDigits"],[25,40,27,27],[25,42,27,28,"token"],[25,47,27,33],[25,48,27,34,"length"],[25,54,27,40],[25,56,27,42,"dateString"],[25,66,27,52],[25,67,27,53],[26,6,28,4],[27,4,29,2],[28,4,31,2,"validate"],[28,12,31,10,"validate"],[28,13,31,11,"date"],[28,17,31,15],[28,19,31,17,"value"],[28,24,31,22],[28,26,31,24],[29,6,32,4],[29,12,32,10,"year"],[29,16,32,14],[29,19,32,17,"date"],[29,23,32,21],[29,24,32,22,"getFullYear"],[29,35,32,33],[29,36,32,34],[29,37,32,35],[30,6,33,4],[30,12,33,10,"isLeapYear"],[30,22,33,20],[30,25,33,23],[30,29,33,23,"isLeapYearIndex"],[30,51,33,38],[30,53,33,39,"year"],[30,57,33,43],[30,58,33,44],[31,6,34,4],[31,12,34,10,"month"],[31,17,34,15],[31,20,34,18,"date"],[31,24,34,22],[31,25,34,23,"getMonth"],[31,33,34,31],[31,34,34,32],[31,35,34,33],[32,6,35,4],[32,10,35,8,"isLeapYear"],[32,20,35,18],[32,22,35,20],[33,8,36,6],[33,15,36,13,"value"],[33,20,36,18],[33,24,36,22],[33,25,36,23],[33,29,36,27,"value"],[33,34,36,32],[33,38,36,36,"DAYS_IN_MONTH_LEAP_YEAR"],[33,61,36,59],[33,62,36,60,"month"],[33,67,36,65],[33,68,36,66],[34,6,37,4],[34,7,37,5],[34,13,37,11],[35,8,38,6],[35,15,38,13,"value"],[35,20,38,18],[35,24,38,22],[35,25,38,23],[35,29,38,27,"value"],[35,34,38,32],[35,38,38,36,"DAYS_IN_MONTH"],[35,51,38,49],[35,52,38,50,"month"],[35,57,38,55],[35,58,38,56],[36,6,39,4],[37,4,40,2],[38,4,42,2,"set"],[38,7,42,5,"set"],[38,8,42,6,"date"],[38,12,42,10],[38,14,42,12,"_flags"],[38,20,42,18],[38,22,42,20,"value"],[38,27,42,25],[38,29,42,27],[39,6,43,4,"date"],[39,10,43,8],[39,11,43,9,"setDate"],[39,18,43,16],[39,19,43,17,"value"],[39,24,43,22],[39,25,43,23],[40,6,44,4,"date"],[40,10,44,8],[40,11,44,9,"setHours"],[40,19,44,17],[40,20,44,18],[40,21,44,19],[40,23,44,21],[40,24,44,22],[40,26,44,24],[40,27,44,25],[40,29,44,27],[40,30,44,28],[40,31,44,29],[41,6,45,4],[41,13,45,11,"date"],[41,17,45,15],[42,4,46,2],[43,4,48,2,"incompatibleTokens"],[43,22,48,20],[43,25,48,23],[43,26,49,4],[43,29,49,7],[43,31,50,4],[43,34,50,7],[43,36,51,4],[43,39,51,7],[43,41,52,4],[43,44,52,7],[43,46,53,4],[43,49,53,7],[43,51,54,4],[43,54,54,7],[43,56,55,4],[43,59,55,7],[43,61,56,4],[43,64,56,7],[43,66,57,4],[43,69,57,7],[43,71,58,4],[43,74,58,7],[43,76,59,4],[43,79,59,7],[43,81,60,4],[43,84,60,7],[43,85,61,3],[44,2,62,0],[45,2,62,1,"exports"],[45,9,62,1],[45,10,62,1,"DateParser"],[45,20,62,1],[45,23,62,1,"DateParser"],[45,33,62,1],[46,0,62,1],[46,3]],"functionMap":{"names":["<global>","DateParser","parse","validate","set"],"mappings":"AAA;OCe;ECI;GDS;EEE;GFS;EGE;GHI;CDgB"}},"type":"js/module"}]}