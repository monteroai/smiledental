{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.secondsInYear = exports.secondsInWeek = exports.secondsInQuarter = exports.secondsInMonth = exports.secondsInMinute = exports.secondsInHour = exports.secondsInDay = exports.quartersInYear = exports.monthsInYear = exports.monthsInQuarter = exports.minutesInYear = exports.minutesInMonth = exports.minutesInHour = exports.minutesInDay = exports.minTime = exports.millisecondsInWeek = exports.millisecondsInSecond = exports.millisecondsInMinute = exports.millisecondsInHour = exports.millisecondsInDay = exports.maxTime = exports.daysInYear = exports.daysInWeek = exports.constructFromSymbol = void 0;\n  /**\n   * @module constants\n   * @summary Useful constants\n   * @description\n   * Collection of useful date constants.\n   *\n   * The constants could be imported from `date-fns/constants`:\n   *\n   * ```ts\n   * import { maxTime, minTime } from \"./constants/date-fns/constants\";\n   *\n   * function isAllowedTime(time) {\n   *   return time <= maxTime && time >= minTime;\n   * }\n   * ```\n   */\n\n  /**\n   * @constant\n   * @name daysInWeek\n   * @summary Days in 1 week.\n   */\n  const daysInWeek = exports.daysInWeek = 7;\n\n  /**\n   * @constant\n   * @name daysInYear\n   * @summary Days in 1 year.\n   *\n   * @description\n   * How many days in a year.\n   *\n   * One years equals 365.2425 days according to the formula:\n   *\n   * > Leap year occurs every 4 years, except for years that are divisible by 100 and not divisible by 400.\n   * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n   */\n  const daysInYear = exports.daysInYear = 365.2425;\n\n  /**\n   * @constant\n   * @name maxTime\n   * @summary Maximum allowed time.\n   *\n   * @example\n   * import { maxTime } from \"./constants/date-fns/constants\";\n   *\n   * const isValid = 8640000000000001 <= maxTime;\n   * //=> false\n   *\n   * new Date(8640000000000001);\n   * //=> Invalid Date\n   */\n  const maxTime = exports.maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n  /**\n   * @constant\n   * @name minTime\n   * @summary Minimum allowed time.\n   *\n   * @example\n   * import { minTime } from \"./constants/date-fns/constants\";\n   *\n   * const isValid = -8640000000000001 >= minTime;\n   * //=> false\n   *\n   * new Date(-8640000000000001)\n   * //=> Invalid Date\n   */\n  const minTime = exports.minTime = -maxTime;\n\n  /**\n   * @constant\n   * @name millisecondsInWeek\n   * @summary Milliseconds in 1 week.\n   */\n  const millisecondsInWeek = exports.millisecondsInWeek = 604800000;\n\n  /**\n   * @constant\n   * @name millisecondsInDay\n   * @summary Milliseconds in 1 day.\n   */\n  const millisecondsInDay = exports.millisecondsInDay = 86400000;\n\n  /**\n   * @constant\n   * @name millisecondsInMinute\n   * @summary Milliseconds in 1 minute\n   */\n  const millisecondsInMinute = exports.millisecondsInMinute = 60000;\n\n  /**\n   * @constant\n   * @name millisecondsInHour\n   * @summary Milliseconds in 1 hour\n   */\n  const millisecondsInHour = exports.millisecondsInHour = 3600000;\n\n  /**\n   * @constant\n   * @name millisecondsInSecond\n   * @summary Milliseconds in 1 second\n   */\n  const millisecondsInSecond = exports.millisecondsInSecond = 1000;\n\n  /**\n   * @constant\n   * @name minutesInYear\n   * @summary Minutes in 1 year.\n   */\n  const minutesInYear = exports.minutesInYear = 525600;\n\n  /**\n   * @constant\n   * @name minutesInMonth\n   * @summary Minutes in 1 month.\n   */\n  const minutesInMonth = exports.minutesInMonth = 43200;\n\n  /**\n   * @constant\n   * @name minutesInDay\n   * @summary Minutes in 1 day.\n   */\n  const minutesInDay = exports.minutesInDay = 1440;\n\n  /**\n   * @constant\n   * @name minutesInHour\n   * @summary Minutes in 1 hour.\n   */\n  const minutesInHour = exports.minutesInHour = 60;\n\n  /**\n   * @constant\n   * @name monthsInQuarter\n   * @summary Months in 1 quarter.\n   */\n  const monthsInQuarter = exports.monthsInQuarter = 3;\n\n  /**\n   * @constant\n   * @name monthsInYear\n   * @summary Months in 1 year.\n   */\n  const monthsInYear = exports.monthsInYear = 12;\n\n  /**\n   * @constant\n   * @name quartersInYear\n   * @summary Quarters in 1 year\n   */\n  const quartersInYear = exports.quartersInYear = 4;\n\n  /**\n   * @constant\n   * @name secondsInHour\n   * @summary Seconds in 1 hour.\n   */\n  const secondsInHour = exports.secondsInHour = 3600;\n\n  /**\n   * @constant\n   * @name secondsInMinute\n   * @summary Seconds in 1 minute.\n   */\n  const secondsInMinute = exports.secondsInMinute = 60;\n\n  /**\n   * @constant\n   * @name secondsInDay\n   * @summary Seconds in 1 day.\n   */\n  const secondsInDay = exports.secondsInDay = secondsInHour * 24;\n\n  /**\n   * @constant\n   * @name secondsInWeek\n   * @summary Seconds in 1 week.\n   */\n  const secondsInWeek = exports.secondsInWeek = secondsInDay * 7;\n\n  /**\n   * @constant\n   * @name secondsInYear\n   * @summary Seconds in 1 year.\n   */\n  const secondsInYear = exports.secondsInYear = secondsInDay * daysInYear;\n\n  /**\n   * @constant\n   * @name secondsInMonth\n   * @summary Seconds in 1 month\n   */\n  const secondsInMonth = exports.secondsInMonth = secondsInYear / 12;\n\n  /**\n   * @constant\n   * @name secondsInQuarter\n   * @summary Seconds in 1 quarter.\n   */\n  const secondsInQuarter = exports.secondsInQuarter = secondsInMonth * 3;\n\n  /**\n   * @constant\n   * @name constructFromSymbol\n   * @summary Symbol enabling Date extensions to inherit properties from the reference date.\n   *\n   * The symbol is used to enable the `constructFrom` function to construct a date\n   * using a reference date and a value. It allows to transfer extra properties\n   * from the reference date to the new date. It's useful for extensions like\n   * [`TZDate`](https://github.com/date-fns/tz) that accept a time zone as\n   * a constructor argument.\n   */\n  const constructFromSymbol = exports.constructFromSymbol = Symbol.for(\"constructDateFrom\");\n});","lineCount":222,"map":[[6,2,1,0],[7,0,2,0],[8,0,3,0],[9,0,4,0],[10,0,5,0],[11,0,6,0],[12,0,7,0],[13,0,8,0],[14,0,9,0],[15,0,10,0],[16,0,11,0],[17,0,12,0],[18,0,13,0],[19,0,14,0],[20,0,15,0],[21,0,16,0],[23,2,18,0],[24,0,19,0],[25,0,20,0],[26,0,21,0],[27,0,22,0],[28,2,23,7],[28,8,23,13,"daysInWeek"],[28,18,23,23],[28,21,23,23,"exports"],[28,28,23,23],[28,29,23,23,"daysInWeek"],[28,39,23,23],[28,42,23,26],[28,43,23,27],[30,2,25,0],[31,0,26,0],[32,0,27,0],[33,0,28,0],[34,0,29,0],[35,0,30,0],[36,0,31,0],[37,0,32,0],[38,0,33,0],[39,0,34,0],[40,0,35,0],[41,0,36,0],[42,0,37,0],[43,2,38,7],[43,8,38,13,"daysInYear"],[43,18,38,23],[43,21,38,23,"exports"],[43,28,38,23],[43,29,38,23,"daysInYear"],[43,39,38,23],[43,42,38,26],[43,50,38,34],[45,2,40,0],[46,0,41,0],[47,0,42,0],[48,0,43,0],[49,0,44,0],[50,0,45,0],[51,0,46,0],[52,0,47,0],[53,0,48,0],[54,0,49,0],[55,0,50,0],[56,0,51,0],[57,0,52,0],[58,0,53,0],[59,2,54,7],[59,8,54,13,"maxTime"],[59,15,54,20],[59,18,54,20,"exports"],[59,25,54,20],[59,26,54,20,"maxTime"],[59,33,54,20],[59,36,54,23,"Math"],[59,40,54,27],[59,41,54,28,"pow"],[59,44,54,31],[59,45,54,32],[59,47,54,34],[59,49,54,36],[59,50,54,37],[59,51,54,38],[59,54,54,41],[59,56,54,43],[59,59,54,46],[59,61,54,48],[59,64,54,51],[59,66,54,53],[59,69,54,56],[59,73,54,60],[61,2,56,0],[62,0,57,0],[63,0,58,0],[64,0,59,0],[65,0,60,0],[66,0,61,0],[67,0,62,0],[68,0,63,0],[69,0,64,0],[70,0,65,0],[71,0,66,0],[72,0,67,0],[73,0,68,0],[74,0,69,0],[75,2,70,7],[75,8,70,13,"minTime"],[75,15,70,20],[75,18,70,20,"exports"],[75,25,70,20],[75,26,70,20,"minTime"],[75,33,70,20],[75,36,70,23],[75,37,70,24,"maxTime"],[75,44,70,31],[77,2,72,0],[78,0,73,0],[79,0,74,0],[80,0,75,0],[81,0,76,0],[82,2,77,7],[82,8,77,13,"millisecondsInWeek"],[82,26,77,31],[82,29,77,31,"exports"],[82,36,77,31],[82,37,77,31,"millisecondsInWeek"],[82,55,77,31],[82,58,77,34],[82,67,77,43],[84,2,79,0],[85,0,80,0],[86,0,81,0],[87,0,82,0],[88,0,83,0],[89,2,84,7],[89,8,84,13,"millisecondsInDay"],[89,25,84,30],[89,28,84,30,"exports"],[89,35,84,30],[89,36,84,30,"millisecondsInDay"],[89,53,84,30],[89,56,84,33],[89,64,84,41],[91,2,86,0],[92,0,87,0],[93,0,88,0],[94,0,89,0],[95,0,90,0],[96,2,91,7],[96,8,91,13,"millisecondsInMinute"],[96,28,91,33],[96,31,91,33,"exports"],[96,38,91,33],[96,39,91,33,"millisecondsInMinute"],[96,59,91,33],[96,62,91,36],[96,67,91,41],[98,2,93,0],[99,0,94,0],[100,0,95,0],[101,0,96,0],[102,0,97,0],[103,2,98,7],[103,8,98,13,"millisecondsInHour"],[103,26,98,31],[103,29,98,31,"exports"],[103,36,98,31],[103,37,98,31,"millisecondsInHour"],[103,55,98,31],[103,58,98,34],[103,65,98,41],[105,2,100,0],[106,0,101,0],[107,0,102,0],[108,0,103,0],[109,0,104,0],[110,2,105,7],[110,8,105,13,"millisecondsInSecond"],[110,28,105,33],[110,31,105,33,"exports"],[110,38,105,33],[110,39,105,33,"millisecondsInSecond"],[110,59,105,33],[110,62,105,36],[110,66,105,40],[112,2,107,0],[113,0,108,0],[114,0,109,0],[115,0,110,0],[116,0,111,0],[117,2,112,7],[117,8,112,13,"minutesInYear"],[117,21,112,26],[117,24,112,26,"exports"],[117,31,112,26],[117,32,112,26,"minutesInYear"],[117,45,112,26],[117,48,112,29],[117,54,112,35],[119,2,114,0],[120,0,115,0],[121,0,116,0],[122,0,117,0],[123,0,118,0],[124,2,119,7],[124,8,119,13,"minutesInMonth"],[124,22,119,27],[124,25,119,27,"exports"],[124,32,119,27],[124,33,119,27,"minutesInMonth"],[124,47,119,27],[124,50,119,30],[124,55,119,35],[126,2,121,0],[127,0,122,0],[128,0,123,0],[129,0,124,0],[130,0,125,0],[131,2,126,7],[131,8,126,13,"minutesInDay"],[131,20,126,25],[131,23,126,25,"exports"],[131,30,126,25],[131,31,126,25,"minutesInDay"],[131,43,126,25],[131,46,126,28],[131,50,126,32],[133,2,128,0],[134,0,129,0],[135,0,130,0],[136,0,131,0],[137,0,132,0],[138,2,133,7],[138,8,133,13,"minutesInHour"],[138,21,133,26],[138,24,133,26,"exports"],[138,31,133,26],[138,32,133,26,"minutesInHour"],[138,45,133,26],[138,48,133,29],[138,50,133,31],[140,2,135,0],[141,0,136,0],[142,0,137,0],[143,0,138,0],[144,0,139,0],[145,2,140,7],[145,8,140,13,"monthsInQuarter"],[145,23,140,28],[145,26,140,28,"exports"],[145,33,140,28],[145,34,140,28,"monthsInQuarter"],[145,49,140,28],[145,52,140,31],[145,53,140,32],[147,2,142,0],[148,0,143,0],[149,0,144,0],[150,0,145,0],[151,0,146,0],[152,2,147,7],[152,8,147,13,"monthsInYear"],[152,20,147,25],[152,23,147,25,"exports"],[152,30,147,25],[152,31,147,25,"monthsInYear"],[152,43,147,25],[152,46,147,28],[152,48,147,30],[154,2,149,0],[155,0,150,0],[156,0,151,0],[157,0,152,0],[158,0,153,0],[159,2,154,7],[159,8,154,13,"quartersInYear"],[159,22,154,27],[159,25,154,27,"exports"],[159,32,154,27],[159,33,154,27,"quartersInYear"],[159,47,154,27],[159,50,154,30],[159,51,154,31],[161,2,156,0],[162,0,157,0],[163,0,158,0],[164,0,159,0],[165,0,160,0],[166,2,161,7],[166,8,161,13,"secondsInHour"],[166,21,161,26],[166,24,161,26,"exports"],[166,31,161,26],[166,32,161,26,"secondsInHour"],[166,45,161,26],[166,48,161,29],[166,52,161,33],[168,2,163,0],[169,0,164,0],[170,0,165,0],[171,0,166,0],[172,0,167,0],[173,2,168,7],[173,8,168,13,"secondsInMinute"],[173,23,168,28],[173,26,168,28,"exports"],[173,33,168,28],[173,34,168,28,"secondsInMinute"],[173,49,168,28],[173,52,168,31],[173,54,168,33],[175,2,170,0],[176,0,171,0],[177,0,172,0],[178,0,173,0],[179,0,174,0],[180,2,175,7],[180,8,175,13,"secondsInDay"],[180,20,175,25],[180,23,175,25,"exports"],[180,30,175,25],[180,31,175,25,"secondsInDay"],[180,43,175,25],[180,46,175,28,"secondsInHour"],[180,59,175,41],[180,62,175,44],[180,64,175,46],[182,2,177,0],[183,0,178,0],[184,0,179,0],[185,0,180,0],[186,0,181,0],[187,2,182,7],[187,8,182,13,"secondsInWeek"],[187,21,182,26],[187,24,182,26,"exports"],[187,31,182,26],[187,32,182,26,"secondsInWeek"],[187,45,182,26],[187,48,182,29,"secondsInDay"],[187,60,182,41],[187,63,182,44],[187,64,182,45],[189,2,184,0],[190,0,185,0],[191,0,186,0],[192,0,187,0],[193,0,188,0],[194,2,189,7],[194,8,189,13,"secondsInYear"],[194,21,189,26],[194,24,189,26,"exports"],[194,31,189,26],[194,32,189,26,"secondsInYear"],[194,45,189,26],[194,48,189,29,"secondsInDay"],[194,60,189,41],[194,63,189,44,"daysInYear"],[194,73,189,54],[196,2,191,0],[197,0,192,0],[198,0,193,0],[199,0,194,0],[200,0,195,0],[201,2,196,7],[201,8,196,13,"secondsInMonth"],[201,22,196,27],[201,25,196,27,"exports"],[201,32,196,27],[201,33,196,27,"secondsInMonth"],[201,47,196,27],[201,50,196,30,"secondsInYear"],[201,63,196,43],[201,66,196,46],[201,68,196,48],[203,2,198,0],[204,0,199,0],[205,0,200,0],[206,0,201,0],[207,0,202,0],[208,2,203,7],[208,8,203,13,"secondsInQuarter"],[208,24,203,29],[208,27,203,29,"exports"],[208,34,203,29],[208,35,203,29,"secondsInQuarter"],[208,51,203,29],[208,54,203,32,"secondsInMonth"],[208,68,203,46],[208,71,203,49],[208,72,203,50],[210,2,205,0],[211,0,206,0],[212,0,207,0],[213,0,208,0],[214,0,209,0],[215,0,210,0],[216,0,211,0],[217,0,212,0],[218,0,213,0],[219,0,214,0],[220,0,215,0],[221,2,216,7],[221,8,216,13,"constructFromSymbol"],[221,27,216,32],[221,30,216,32,"exports"],[221,37,216,32],[221,38,216,32,"constructFromSymbol"],[221,57,216,32],[221,60,216,35,"Symbol"],[221,66,216,41],[221,67,216,42,"for"],[221,70,216,45],[221,71,216,46],[221,90,216,65],[221,91,216,66],[222,0,216,67],[222,3]],"functionMap":{"names":["<global>"],"mappings":"AAA"}},"type":"js/module"}]}