{"dependencies":[{"name":"./_lib/addLeadingZeros.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":60,"index":60}}],"key":"nr19Y2AxEUlGdF0WaI8ULOMy6Cc=","exportNames":["*"]}},{"name":"./isValid.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":61},"end":{"line":2,"column":39,"index":100}}],"key":"Sst1buy9uBfV7bjRtTAEggSwFYs=","exportNames":["*"]}},{"name":"./toDate.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":101},"end":{"line":3,"column":37,"index":138}}],"key":"RegFU1ZGEd4LY/vrIDYZdnoZzIk=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  exports.formatRFC7231 = formatRFC7231;\n  var _addLeadingZeros = require(_dependencyMap[0], \"./_lib/addLeadingZeros.js\");\n  var _isValid = require(_dependencyMap[1], \"./isValid.js\");\n  var _toDate = require(_dependencyMap[2], \"./toDate.js\");\n  const days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n  const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\n  /**\n   * @name formatRFC7231\n   * @category Common Helpers\n   * @summary Format the date according to the RFC 7231 standard (https://tools.ietf.org/html/rfc7231#section-7.1.1.1).\n   *\n   * @description\n   * Return the formatted date string in RFC 7231 format.\n   * The result will always be in UTC timezone.\n   *\n   * @param date - The original date\n   *\n   * @returns The formatted date string\n   *\n   * @throws `date` must not be Invalid Date\n   *\n   * @example\n   * // Represent 18 September 2019 in RFC 7231 format:\n   * const result = formatRFC7231(new Date(2019, 8, 18, 19, 0, 52))\n   * //=> 'Wed, 18 Sep 2019 19:00:52 GMT'\n   */\n  function formatRFC7231(date) {\n    const _date = (0, _toDate.toDate)(date);\n    if (!(0, _isValid.isValid)(_date)) {\n      throw new RangeError(\"Invalid time value\");\n    }\n    const dayName = days[_date.getUTCDay()];\n    const dayOfMonth = (0, _addLeadingZeros.addLeadingZeros)(_date.getUTCDate(), 2);\n    const monthName = months[_date.getUTCMonth()];\n    const year = _date.getUTCFullYear();\n    const hour = (0, _addLeadingZeros.addLeadingZeros)(_date.getUTCHours(), 2);\n    const minute = (0, _addLeadingZeros.addLeadingZeros)(_date.getUTCMinutes(), 2);\n    const second = (0, _addLeadingZeros.addLeadingZeros)(_date.getUTCSeconds(), 2);\n\n    // Result variables.\n    return `${dayName}, ${dayOfMonth} ${monthName} ${year} ${hour}:${minute}:${second} GMT`;\n  }\n\n  // Fallback for modularized imports:\n  var _default = exports.default = formatRFC7231;\n});","lineCount":52,"map":[[7,2,1,0],[7,6,1,0,"_addLeadingZeros"],[7,22,1,0],[7,25,1,0,"require"],[7,32,1,0],[7,33,1,0,"_dependencyMap"],[7,47,1,0],[8,2,2,0],[8,6,2,0,"_isValid"],[8,14,2,0],[8,17,2,0,"require"],[8,24,2,0],[8,25,2,0,"_dependencyMap"],[8,39,2,0],[9,2,3,0],[9,6,3,0,"_toDate"],[9,13,3,0],[9,16,3,0,"require"],[9,23,3,0],[9,24,3,0,"_dependencyMap"],[9,38,3,0],[10,2,5,0],[10,8,5,6,"days"],[10,12,5,10],[10,15,5,13],[10,16,5,14],[10,21,5,19],[10,23,5,21],[10,28,5,26],[10,30,5,28],[10,35,5,33],[10,37,5,35],[10,42,5,40],[10,44,5,42],[10,49,5,47],[10,51,5,49],[10,56,5,54],[10,58,5,56],[10,63,5,61],[10,64,5,62],[11,2,7,0],[11,8,7,6,"months"],[11,14,7,12],[11,17,7,15],[11,18,8,2],[11,23,8,7],[11,25,9,2],[11,30,9,7],[11,32,10,2],[11,37,10,7],[11,39,11,2],[11,44,11,7],[11,46,12,2],[11,51,12,7],[11,53,13,2],[11,58,13,7],[11,60,14,2],[11,65,14,7],[11,67,15,2],[11,72,15,7],[11,74,16,2],[11,79,16,7],[11,81,17,2],[11,86,17,7],[11,88,18,2],[11,93,18,7],[11,95,19,2],[11,100,19,7],[11,101,20,1],[13,2,22,0],[14,0,23,0],[15,0,24,0],[16,0,25,0],[17,0,26,0],[18,0,27,0],[19,0,28,0],[20,0,29,0],[21,0,30,0],[22,0,31,0],[23,0,32,0],[24,0,33,0],[25,0,34,0],[26,0,35,0],[27,0,36,0],[28,0,37,0],[29,0,38,0],[30,0,39,0],[31,0,40,0],[32,0,41,0],[33,2,42,7],[33,11,42,16,"formatRFC7231"],[33,24,42,29,"formatRFC7231"],[33,25,42,30,"date"],[33,29,42,34],[33,31,42,36],[34,4,43,2],[34,10,43,8,"_date"],[34,15,43,13],[34,18,43,16],[34,22,43,16,"toDate"],[34,36,43,22],[34,38,43,23,"date"],[34,42,43,27],[34,43,43,28],[35,4,45,2],[35,8,45,6],[35,9,45,7],[35,13,45,7,"isValid"],[35,29,45,14],[35,31,45,15,"_date"],[35,36,45,20],[35,37,45,21],[35,39,45,23],[36,6,46,4],[36,12,46,10],[36,16,46,14,"RangeError"],[36,26,46,24],[36,27,46,25],[36,47,46,45],[36,48,46,46],[37,4,47,2],[38,4,49,2],[38,10,49,8,"dayName"],[38,17,49,15],[38,20,49,18,"days"],[38,24,49,22],[38,25,49,23,"_date"],[38,30,49,28],[38,31,49,29,"getUTCDay"],[38,40,49,38],[38,41,49,39],[38,42,49,40],[38,43,49,41],[39,4,50,2],[39,10,50,8,"dayOfMonth"],[39,20,50,18],[39,23,50,21],[39,27,50,21,"addLeadingZeros"],[39,59,50,36],[39,61,50,37,"_date"],[39,66,50,42],[39,67,50,43,"getUTCDate"],[39,77,50,53],[39,78,50,54],[39,79,50,55],[39,81,50,57],[39,82,50,58],[39,83,50,59],[40,4,51,2],[40,10,51,8,"monthName"],[40,19,51,17],[40,22,51,20,"months"],[40,28,51,26],[40,29,51,27,"_date"],[40,34,51,32],[40,35,51,33,"getUTCMonth"],[40,46,51,44],[40,47,51,45],[40,48,51,46],[40,49,51,47],[41,4,52,2],[41,10,52,8,"year"],[41,14,52,12],[41,17,52,15,"_date"],[41,22,52,20],[41,23,52,21,"getUTCFullYear"],[41,37,52,35],[41,38,52,36],[41,39,52,37],[42,4,54,2],[42,10,54,8,"hour"],[42,14,54,12],[42,17,54,15],[42,21,54,15,"addLeadingZeros"],[42,53,54,30],[42,55,54,31,"_date"],[42,60,54,36],[42,61,54,37,"getUTCHours"],[42,72,54,48],[42,73,54,49],[42,74,54,50],[42,76,54,52],[42,77,54,53],[42,78,54,54],[43,4,55,2],[43,10,55,8,"minute"],[43,16,55,14],[43,19,55,17],[43,23,55,17,"addLeadingZeros"],[43,55,55,32],[43,57,55,33,"_date"],[43,62,55,38],[43,63,55,39,"getUTCMinutes"],[43,76,55,52],[43,77,55,53],[43,78,55,54],[43,80,55,56],[43,81,55,57],[43,82,55,58],[44,4,56,2],[44,10,56,8,"second"],[44,16,56,14],[44,19,56,17],[44,23,56,17,"addLeadingZeros"],[44,55,56,32],[44,57,56,33,"_date"],[44,62,56,38],[44,63,56,39,"getUTCSeconds"],[44,76,56,52],[44,77,56,53],[44,78,56,54],[44,80,56,56],[44,81,56,57],[44,82,56,58],[46,4,58,2],[47,4,59,2],[47,11,59,9],[47,14,59,12,"dayName"],[47,21,59,19],[47,26,59,24,"dayOfMonth"],[47,36,59,34],[47,40,59,38,"monthName"],[47,49,59,47],[47,53,59,51,"year"],[47,57,59,55],[47,61,59,59,"hour"],[47,65,59,63],[47,69,59,67,"minute"],[47,75,59,73],[47,79,59,77,"second"],[47,85,59,83],[47,91,59,89],[48,2,60,0],[50,2,62,0],[51,2,62,0],[51,6,62,0,"_default"],[51,14,62,0],[51,17,62,0,"exports"],[51,24,62,0],[51,25,62,0,"default"],[51,32,62,0],[51,35,63,15,"formatRFC7231"],[51,48,63,28],[52,0,63,28],[52,3]],"functionMap":{"names":["<global>","formatRFC7231"],"mappings":"AAA;OCyC;CDkB"}},"type":"js/module"}]}