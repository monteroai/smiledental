{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.buildLocalizeFn = buildLocalizeFn;\n  /**\n   * The localize function argument callback which allows to convert raw value to\n   * the actual type.\n   *\n   * @param value - The value to convert\n   *\n   * @returns The converted value\n   */\n\n  /**\n   * The map of localized values for each width.\n   */\n\n  /**\n   * The index type of the locale unit value. It types conversion of units of\n   * values that don't start at 0 (i.e. quarters).\n   */\n\n  /**\n   * Converts the unit value to the tuple of values.\n   */\n\n  /**\n   * The tuple of localized era values. The first element represents BC,\n   * the second element represents AD.\n   */\n\n  /**\n   * The tuple of localized quarter values. The first element represents Q1.\n   */\n\n  /**\n   * The tuple of localized day values. The first element represents Sunday.\n   */\n\n  /**\n   * The tuple of localized month values. The first element represents January.\n   */\n\n  function buildLocalizeFn(args) {\n    return (value, options) => {\n      const context = options?.context ? String(options.context) : \"standalone\";\n      let valuesArray;\n      if (context === \"formatting\" && args.formattingValues) {\n        const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n        const width = options?.width ? String(options.width) : defaultWidth;\n        valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];\n      } else {\n        const defaultWidth = args.defaultWidth;\n        const width = options?.width ? String(options.width) : args.defaultWidth;\n        valuesArray = args.values[width] || args.values[defaultWidth];\n      }\n      const index = args.argumentCallback ? args.argumentCallback(value) : value;\n\n      // @ts-expect-error - For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n      return valuesArray[index];\n    };\n  }\n});","lineCount":64,"map":[[6,2,1,0],[7,0,2,0],[8,0,3,0],[9,0,4,0],[10,0,5,0],[11,0,6,0],[12,0,7,0],[13,0,8,0],[15,2,10,0],[16,0,11,0],[17,0,12,0],[19,2,14,0],[20,0,15,0],[21,0,16,0],[22,0,17,0],[24,2,19,0],[25,0,20,0],[26,0,21,0],[28,2,23,0],[29,0,24,0],[30,0,25,0],[31,0,26,0],[33,2,28,0],[34,0,29,0],[35,0,30,0],[37,2,32,0],[38,0,33,0],[39,0,34,0],[41,2,36,0],[42,0,37,0],[43,0,38,0],[45,2,40,7],[45,11,40,16,"buildLocalizeFn"],[45,26,40,31,"buildLocalizeFn"],[45,27,40,32,"args"],[45,31,40,36],[45,33,40,38],[46,4,41,2],[46,11,41,9],[46,12,41,10,"value"],[46,17,41,15],[46,19,41,17,"options"],[46,26,41,24],[46,31,41,29],[47,6,42,4],[47,12,42,10,"context"],[47,19,42,17],[47,22,42,20,"options"],[47,29,42,27],[47,31,42,29,"context"],[47,38,42,36],[47,41,42,39,"String"],[47,47,42,45],[47,48,42,46,"options"],[47,55,42,53],[47,56,42,54,"context"],[47,63,42,61],[47,64,42,62],[47,67,42,65],[47,79,42,77],[48,6,44,4],[48,10,44,8,"valuesArray"],[48,21,44,19],[49,6,45,4],[49,10,45,8,"context"],[49,17,45,15],[49,22,45,20],[49,34,45,32],[49,38,45,36,"args"],[49,42,45,40],[49,43,45,41,"formattingValues"],[49,59,45,57],[49,61,45,59],[50,8,46,6],[50,14,46,12,"defaultWidth"],[50,26,46,24],[50,29,46,27,"args"],[50,33,46,31],[50,34,46,32,"defaultFormattingWidth"],[50,56,46,54],[50,60,46,58,"args"],[50,64,46,62],[50,65,46,63,"defaultWidth"],[50,77,46,75],[51,8,47,6],[51,14,47,12,"width"],[51,19,47,17],[51,22,47,20,"options"],[51,29,47,27],[51,31,47,29,"width"],[51,36,47,34],[51,39,47,37,"String"],[51,45,47,43],[51,46,47,44,"options"],[51,53,47,51],[51,54,47,52,"width"],[51,59,47,57],[51,60,47,58],[51,63,47,61,"defaultWidth"],[51,75,47,73],[52,8,49,6,"valuesArray"],[52,19,49,17],[52,22,50,8,"args"],[52,26,50,12],[52,27,50,13,"formattingValues"],[52,43,50,29],[52,44,50,30,"width"],[52,49,50,35],[52,50,50,36],[52,54,50,40,"args"],[52,58,50,44],[52,59,50,45,"formattingValues"],[52,75,50,61],[52,76,50,62,"defaultWidth"],[52,88,50,74],[52,89,50,75],[53,6,51,4],[53,7,51,5],[53,13,51,11],[54,8,52,6],[54,14,52,12,"defaultWidth"],[54,26,52,24],[54,29,52,27,"args"],[54,33,52,31],[54,34,52,32,"defaultWidth"],[54,46,52,44],[55,8,53,6],[55,14,53,12,"width"],[55,19,53,17],[55,22,53,20,"options"],[55,29,53,27],[55,31,53,29,"width"],[55,36,53,34],[55,39,53,37,"String"],[55,45,53,43],[55,46,53,44,"options"],[55,53,53,51],[55,54,53,52,"width"],[55,59,53,57],[55,60,53,58],[55,63,53,61,"args"],[55,67,53,65],[55,68,53,66,"defaultWidth"],[55,80,53,78],[56,8,55,6,"valuesArray"],[56,19,55,17],[56,22,55,20,"args"],[56,26,55,24],[56,27,55,25,"values"],[56,33,55,31],[56,34,55,32,"width"],[56,39,55,37],[56,40,55,38],[56,44,55,42,"args"],[56,48,55,46],[56,49,55,47,"values"],[56,55,55,53],[56,56,55,54,"defaultWidth"],[56,68,55,66],[56,69,55,67],[57,6,56,4],[58,6,57,4],[58,12,57,10,"index"],[58,17,57,15],[58,20,57,18,"args"],[58,24,57,22],[58,25,57,23,"argumentCallback"],[58,41,57,39],[58,44,57,42,"args"],[58,48,57,46],[58,49,57,47,"argumentCallback"],[58,65,57,63],[58,66,57,64,"value"],[58,71,57,69],[58,72,57,70],[58,75,57,73,"value"],[58,80,57,78],[60,6,59,4],[61,6,60,4],[61,13,60,11,"valuesArray"],[61,24,60,22],[61,25,60,23,"index"],[61,30,60,28],[61,31,60,29],[62,4,61,2],[62,5,61,3],[63,2,62,0],[64,0,62,1],[64,3]],"functionMap":{"names":["<global>","buildLocalizeFn","<anonymous>"],"mappings":"AAA;OCuC;SCC;GDoB;CDC"}},"type":"js/module"}]}