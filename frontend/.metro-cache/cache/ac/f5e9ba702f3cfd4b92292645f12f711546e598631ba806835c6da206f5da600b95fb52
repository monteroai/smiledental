{"dependencies":[{"name":"../constants.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":50,"index":50}}],"key":"w33QN4nlqAZn5CNK6M5HKbLWgBA=","exportNames":["*"]}},{"name":"../Parser.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":51},"end":{"line":2,"column":38,"index":89}}],"key":"CIJslq/MUqKep4ImmeyUTywuBTk=","exportNames":["*"]}},{"name":"../utils.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":91},"end":{"line":4,"column":74,"index":165}}],"key":"dGswK136diHRCgUa8xpQUn/UMbc=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.StandAloneMonthParser = void 0;\n  var _constants = require(_dependencyMap[0], \"../constants.js\");\n  var _Parser = require(_dependencyMap[1], \"../Parser.js\");\n  var _utils = require(_dependencyMap[2], \"../utils.js\");\n  class StandAloneMonthParser extends _Parser.Parser {\n    priority = 110;\n    parse(dateString, token, match) {\n      const valueCallback = value => value - 1;\n      switch (token) {\n        // 1, 2, ..., 12\n        case \"L\":\n          return (0, _utils.mapValue)((0, _utils.parseNumericPattern)(_constants.numericPatterns.month, dateString), valueCallback);\n        // 01, 02, ..., 12\n        case \"LL\":\n          return (0, _utils.mapValue)((0, _utils.parseNDigits)(2, dateString), valueCallback);\n        // 1st, 2nd, ..., 12th\n        case \"Lo\":\n          return (0, _utils.mapValue)(match.ordinalNumber(dateString, {\n            unit: \"month\"\n          }), valueCallback);\n        // Jan, Feb, ..., Dec\n        case \"LLL\":\n          return match.month(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\"\n          }) || match.month(dateString, {\n            width: \"narrow\",\n            context: \"standalone\"\n          });\n\n        // J, F, ..., D\n        case \"LLLLL\":\n          return match.month(dateString, {\n            width: \"narrow\",\n            context: \"standalone\"\n          });\n        // January, February, ..., December\n        case \"LLLL\":\n        default:\n          return match.month(dateString, {\n            width: \"wide\",\n            context: \"standalone\"\n          }) || match.month(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\"\n          }) || match.month(dateString, {\n            width: \"narrow\",\n            context: \"standalone\"\n          });\n      }\n    }\n    validate(_date, value) {\n      return value >= 0 && value <= 11;\n    }\n    set(date, _flags, value) {\n      date.setMonth(value, 1);\n      date.setHours(0, 0, 0, 0);\n      return date;\n    }\n    incompatibleTokens = [\"Y\", \"R\", \"q\", \"Q\", \"M\", \"w\", \"I\", \"D\", \"i\", \"e\", \"c\", \"t\", \"T\"];\n  }\n  exports.StandAloneMonthParser = StandAloneMonthParser;\n});","lineCount":67,"map":[[6,2,1,0],[6,6,1,0,"_constants"],[6,16,1,0],[6,19,1,0,"require"],[6,26,1,0],[6,27,1,0,"_dependencyMap"],[6,41,1,0],[7,2,2,0],[7,6,2,0,"_Parser"],[7,13,2,0],[7,16,2,0,"require"],[7,23,2,0],[7,24,2,0,"_dependencyMap"],[7,38,2,0],[8,2,4,0],[8,6,4,0,"_utils"],[8,12,4,0],[8,15,4,0,"require"],[8,22,4,0],[8,23,4,0,"_dependencyMap"],[8,37,4,0],[9,2,6,7],[9,8,6,13,"StandAloneMonthParser"],[9,29,6,34],[9,38,6,43,"Parser"],[9,52,6,49],[9,53,6,50],[10,4,7,2,"priority"],[10,12,7,10],[10,15,7,13],[10,18,7,16],[11,4,9,2,"parse"],[11,9,9,7,"parse"],[11,10,9,8,"dateString"],[11,20,9,18],[11,22,9,20,"token"],[11,27,9,25],[11,29,9,27,"match"],[11,34,9,32],[11,36,9,34],[12,6,10,4],[12,12,10,10,"valueCallback"],[12,25,10,23],[12,28,10,27,"value"],[12,33,10,32],[12,37,10,37,"value"],[12,42,10,42],[12,45,10,45],[12,46,10,46],[13,6,12,4],[13,14,12,12,"token"],[13,19,12,17],[14,8,13,6],[15,8,14,6],[15,13,14,11],[15,16,14,14],[16,10,15,8],[16,17,15,15],[16,21,15,15,"mapValue"],[16,36,15,23],[16,38,16,10],[16,42,16,10,"parseNumericPattern"],[16,68,16,29],[16,70,16,30,"numericPatterns"],[16,96,16,45],[16,97,16,46,"month"],[16,102,16,51],[16,104,16,53,"dateString"],[16,114,16,63],[16,115,16,64],[16,117,17,10,"valueCallback"],[16,130,18,8],[16,131,18,9],[17,8,19,6],[18,8,20,6],[18,13,20,11],[18,17,20,15],[19,10,21,8],[19,17,21,15],[19,21,21,15,"mapValue"],[19,36,21,23],[19,38,21,24],[19,42,21,24,"parseNDigits"],[19,61,21,36],[19,63,21,37],[19,64,21,38],[19,66,21,40,"dateString"],[19,76,21,50],[19,77,21,51],[19,79,21,53,"valueCallback"],[19,92,21,66],[19,93,21,67],[20,8,22,6],[21,8,23,6],[21,13,23,11],[21,17,23,15],[22,10,24,8],[22,17,24,15],[22,21,24,15,"mapValue"],[22,36,24,23],[22,38,25,10,"match"],[22,43,25,15],[22,44,25,16,"ordinalNumber"],[22,57,25,29],[22,58,25,30,"dateString"],[22,68,25,40],[22,70,25,42],[23,12,26,12,"unit"],[23,16,26,16],[23,18,26,18],[24,10,27,10],[24,11,27,11],[24,12,27,12],[24,14,28,10,"valueCallback"],[24,27,29,8],[24,28,29,9],[25,8,30,6],[26,8,31,6],[26,13,31,11],[26,18,31,16],[27,10,32,8],[27,17,33,10,"match"],[27,22,33,15],[27,23,33,16,"month"],[27,28,33,21],[27,29,33,22,"dateString"],[27,39,33,32],[27,41,33,34],[28,12,34,12,"width"],[28,17,34,17],[28,19,34,19],[28,32,34,32],[29,12,35,12,"context"],[29,19,35,19],[29,21,35,21],[30,10,36,10],[30,11,36,11],[30,12,36,12],[30,16,37,10,"match"],[30,21,37,15],[30,22,37,16,"month"],[30,27,37,21],[30,28,37,22,"dateString"],[30,38,37,32],[30,40,37,34],[31,12,37,36,"width"],[31,17,37,41],[31,19,37,43],[31,27,37,51],[32,12,37,53,"context"],[32,19,37,60],[32,21,37,62],[33,10,37,75],[33,11,37,76],[33,12,37,77],[35,8,40,6],[36,8,41,6],[36,13,41,11],[36,20,41,18],[37,10,42,8],[37,17,42,15,"match"],[37,22,42,20],[37,23,42,21,"month"],[37,28,42,26],[37,29,42,27,"dateString"],[37,39,42,37],[37,41,42,39],[38,12,43,10,"width"],[38,17,43,15],[38,19,43,17],[38,27,43,25],[39,12,44,10,"context"],[39,19,44,17],[39,21,44,19],[40,10,45,8],[40,11,45,9],[40,12,45,10],[41,8,46,6],[42,8,47,6],[42,13,47,11],[42,19,47,17],[43,8,48,6],[44,10,49,8],[44,17,50,10,"match"],[44,22,50,15],[44,23,50,16,"month"],[44,28,50,21],[44,29,50,22,"dateString"],[44,39,50,32],[44,41,50,34],[45,12,50,36,"width"],[45,17,50,41],[45,19,50,43],[45,25,50,49],[46,12,50,51,"context"],[46,19,50,58],[46,21,50,60],[47,10,50,73],[47,11,50,74],[47,12,50,75],[47,16,51,10,"match"],[47,21,51,15],[47,22,51,16,"month"],[47,27,51,21],[47,28,51,22,"dateString"],[47,38,51,32],[47,40,51,34],[48,12,52,12,"width"],[48,17,52,17],[48,19,52,19],[48,32,52,32],[49,12,53,12,"context"],[49,19,53,19],[49,21,53,21],[50,10,54,10],[50,11,54,11],[50,12,54,12],[50,16,55,10,"match"],[50,21,55,15],[50,22,55,16,"month"],[50,27,55,21],[50,28,55,22,"dateString"],[50,38,55,32],[50,40,55,34],[51,12,55,36,"width"],[51,17,55,41],[51,19,55,43],[51,27,55,51],[52,12,55,53,"context"],[52,19,55,60],[52,21,55,62],[53,10,55,75],[53,11,55,76],[53,12,55,77],[54,6,57,4],[55,4,58,2],[56,4,60,2,"validate"],[56,12,60,10,"validate"],[56,13,60,11,"_date"],[56,18,60,16],[56,20,60,18,"value"],[56,25,60,23],[56,27,60,25],[57,6,61,4],[57,13,61,11,"value"],[57,18,61,16],[57,22,61,20],[57,23,61,21],[57,27,61,25,"value"],[57,32,61,30],[57,36,61,34],[57,38,61,36],[58,4,62,2],[59,4,64,2,"set"],[59,7,64,5,"set"],[59,8,64,6,"date"],[59,12,64,10],[59,14,64,12,"_flags"],[59,20,64,18],[59,22,64,20,"value"],[59,27,64,25],[59,29,64,27],[60,6,65,4,"date"],[60,10,65,8],[60,11,65,9,"setMonth"],[60,19,65,17],[60,20,65,18,"value"],[60,25,65,23],[60,27,65,25],[60,28,65,26],[60,29,65,27],[61,6,66,4,"date"],[61,10,66,8],[61,11,66,9,"setHours"],[61,19,66,17],[61,20,66,18],[61,21,66,19],[61,23,66,21],[61,24,66,22],[61,26,66,24],[61,27,66,25],[61,29,66,27],[61,30,66,28],[61,31,66,29],[62,6,67,4],[62,13,67,11,"date"],[62,17,67,15],[63,4,68,2],[64,4,70,2,"incompatibleTokens"],[64,22,70,20],[64,25,70,23],[64,26,71,4],[64,29,71,7],[64,31,72,4],[64,34,72,7],[64,36,73,4],[64,39,73,7],[64,41,74,4],[64,44,74,7],[64,46,75,4],[64,49,75,7],[64,51,76,4],[64,54,76,7],[64,56,77,4],[64,59,77,7],[64,61,78,4],[64,64,78,7],[64,66,79,4],[64,69,79,7],[64,71,80,4],[64,74,80,7],[64,76,81,4],[64,79,81,7],[64,81,82,4],[64,84,82,7],[64,86,83,4],[64,89,83,7],[64,90,84,3],[65,2,85,0],[66,2,85,1,"exports"],[66,9,85,1],[66,10,85,1,"StandAloneMonthParser"],[66,31,85,1],[66,34,85,1,"StandAloneMonthParser"],[66,55,85,1],[67,0,85,1],[67,3]],"functionMap":{"names":["<global>","StandAloneMonthParser","parse","valueCallback","validate","set"],"mappings":"AAA;OCK;ECG;0BCC,oBD;GDgD;EGE;GHE;EIE;GJI;CDiB"}},"type":"js/module"}]}