{"dependencies":[{"name":"./_lib/normalizeDates.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":58,"index":58}}],"key":"p2HPneHw/OdTsxe3h3dVkKepjMk=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  exports.isSameYear = isSameYear;\n  var _normalizeDates = require(_dependencyMap[0], \"./_lib/normalizeDates.js\");\n  /**\n   * The {@link isSameYear} function options.\n   */\n\n  /**\n   * @name isSameYear\n   * @category Year Helpers\n   * @summary Are the given dates in the same year?\n   *\n   * @description\n   * Are the given dates in the same year?\n   *\n   * @param laterDate - The first date to check\n   * @param earlierDate - The second date to check\n   * @param options - An object with options\n   *\n   * @returns The dates are in the same year\n   *\n   * @example\n   * // Are 2 September 2014 and 25 September 2014 in the same year?\n   * const result = isSameYear(new Date(2014, 8, 2), new Date(2014, 8, 25))\n   * //=> true\n   */\n  function isSameYear(laterDate, earlierDate, options) {\n    const [laterDate_, earlierDate_] = (0, _normalizeDates.normalizeDates)(options?.in, laterDate, earlierDate);\n    return laterDate_.getFullYear() === earlierDate_.getFullYear();\n  }\n\n  // Fallback for modularized imports:\n  var _default = exports.default = isSameYear;\n});","lineCount":38,"map":[[7,2,1,0],[7,6,1,0,"_normalizeDates"],[7,21,1,0],[7,24,1,0,"require"],[7,31,1,0],[7,32,1,0,"_dependencyMap"],[7,46,1,0],[8,2,3,0],[9,0,4,0],[10,0,5,0],[12,2,7,0],[13,0,8,0],[14,0,9,0],[15,0,10,0],[16,0,11,0],[17,0,12,0],[18,0,13,0],[19,0,14,0],[20,0,15,0],[21,0,16,0],[22,0,17,0],[23,0,18,0],[24,0,19,0],[25,0,20,0],[26,0,21,0],[27,0,22,0],[28,0,23,0],[29,0,24,0],[30,0,25,0],[31,2,26,7],[31,11,26,16,"isSameYear"],[31,21,26,26,"isSameYear"],[31,22,26,27,"laterDate"],[31,31,26,36],[31,33,26,38,"earlierDate"],[31,44,26,49],[31,46,26,51,"options"],[31,53,26,58],[31,55,26,60],[32,4,27,2],[32,10,27,8],[32,11,27,9,"laterDate_"],[32,21,27,19],[32,23,27,21,"earlierDate_"],[32,35,27,33],[32,36,27,34],[32,39,27,37],[32,43,27,37,"normalizeDates"],[32,73,27,51],[32,75,28,4,"options"],[32,82,28,11],[32,84,28,13,"in"],[32,86,28,15],[32,88,29,4,"laterDate"],[32,97,29,13],[32,99,30,4,"earlierDate"],[32,110,31,2],[32,111,31,3],[33,4,32,2],[33,11,32,9,"laterDate_"],[33,21,32,19],[33,22,32,20,"getFullYear"],[33,33,32,31],[33,34,32,32],[33,35,32,33],[33,40,32,38,"earlierDate_"],[33,52,32,50],[33,53,32,51,"getFullYear"],[33,64,32,62],[33,65,32,63],[33,66,32,64],[34,2,33,0],[36,2,35,0],[37,2,35,0],[37,6,35,0,"_default"],[37,14,35,0],[37,17,35,0,"exports"],[37,24,35,0],[37,25,35,0,"default"],[37,32,35,0],[37,35,36,15,"isSameYear"],[37,45,36,25],[38,0,36,25],[38,3]],"functionMap":{"names":["<global>","isSameYear"],"mappings":"AAA;OCyB;CDO"}},"type":"js/module"}]}