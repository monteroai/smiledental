{"dependencies":[{"name":"./isSameWeek.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":45,"index":45}}],"key":"wvyxSB0Uj/W6kiYrdcehVTEYa8g=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  exports.isSameISOWeek = isSameISOWeek;\n  var _isSameWeek = require(_dependencyMap[0], \"./isSameWeek.js\");\n  /**\n   * The {@link isSameISOWeek} function options.\n   */\n\n  /**\n   * @name isSameISOWeek\n   * @category ISO Week Helpers\n   * @summary Are the given dates in the same ISO week (and year)?\n   *\n   * @description\n   * Are the given dates in the same ISO week (and year)?\n   *\n   * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n   *\n   * @param laterDate - The first date to check\n   * @param earlierDate - The second date to check\n   * @param options - An object with options\n   *\n   * @returns The dates are in the same ISO week (and year)\n   *\n   * @example\n   * // Are 1 September 2014 and 7 September 2014 in the same ISO week?\n   * const result = isSameISOWeek(new Date(2014, 8, 1), new Date(2014, 8, 7))\n   * //=> true\n   *\n   * @example\n   * // Are 1 September 2014 and 1 September 2015 in the same ISO week?\n   * const result = isSameISOWeek(new Date(2014, 8, 1), new Date(2015, 8, 1))\n   * //=> false\n   */\n  function isSameISOWeek(laterDate, earlierDate, options) {\n    return (0, _isSameWeek.isSameWeek)(laterDate, earlierDate, Object.assign({}, options, {\n      weekStartsOn: 1\n    }));\n  }\n\n  // Fallback for modularized imports:\n  var _default = exports.default = isSameISOWeek;\n});","lineCount":46,"map":[[7,2,1,0],[7,6,1,0,"_isSameWeek"],[7,17,1,0],[7,20,1,0,"require"],[7,27,1,0],[7,28,1,0,"_dependencyMap"],[7,42,1,0],[8,2,3,0],[9,0,4,0],[10,0,5,0],[12,2,7,0],[13,0,8,0],[14,0,9,0],[15,0,10,0],[16,0,11,0],[17,0,12,0],[18,0,13,0],[19,0,14,0],[20,0,15,0],[21,0,16,0],[22,0,17,0],[23,0,18,0],[24,0,19,0],[25,0,20,0],[26,0,21,0],[27,0,22,0],[28,0,23,0],[29,0,24,0],[30,0,25,0],[31,0,26,0],[32,0,27,0],[33,0,28,0],[34,0,29,0],[35,0,30,0],[36,0,31,0],[37,0,32,0],[38,2,33,7],[38,11,33,16,"isSameISOWeek"],[38,24,33,29,"isSameISOWeek"],[38,25,33,30,"laterDate"],[38,34,33,39],[38,36,33,41,"earlierDate"],[38,47,33,52],[38,49,33,54,"options"],[38,56,33,61],[38,58,33,63],[39,4,34,2],[39,11,34,9],[39,15,34,9,"isSameWeek"],[39,37,34,19],[39,39,34,20,"laterDate"],[39,48,34,29],[39,50,34,31,"earlierDate"],[39,61,34,42],[39,63,34,42,"Object"],[39,69,34,42],[39,70,34,42,"assign"],[39,76,34,42],[39,81,34,49,"options"],[39,88,34,56],[40,6,34,58,"weekStartsOn"],[40,18,34,70],[40,20,34,72],[41,4,34,73],[41,6,34,75],[41,7,34,76],[42,2,35,0],[44,2,37,0],[45,2,37,0],[45,6,37,0,"_default"],[45,14,37,0],[45,17,37,0,"exports"],[45,24,37,0],[45,25,37,0,"default"],[45,32,37,0],[45,35,38,15,"isSameISOWeek"],[45,48,38,28],[46,0,38,28],[46,3]],"functionMap":{"names":["<global>","isSameISOWeek"],"mappings":"AAA;OCgC;CDE"}},"type":"js/module"}]}