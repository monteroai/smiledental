{"dependencies":[{"name":"./_lib/normalizeDates.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":58,"index":58}}],"key":"p2HPneHw/OdTsxe3h3dVkKepjMk=","exportNames":["*"]}},{"name":"./addDays.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":59},"end":{"line":2,"column":39,"index":98}}],"key":"SmN07HKxNCN07W7zancFddtX2UQ=","exportNames":["*"]}},{"name":"./differenceInCalendarDays.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":99},"end":{"line":3,"column":73,"index":172}}],"key":"imq/EGPR6TLwAkGUJvGZSPH1SeI=","exportNames":["*"]}},{"name":"./isSameDay.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":173},"end":{"line":4,"column":43,"index":216}}],"key":"yVcsg/rObRkOAbeavGYlgwl+soE=","exportNames":["*"]}},{"name":"./isValid.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":217},"end":{"line":5,"column":39,"index":256}}],"key":"Sst1buy9uBfV7bjRtTAEggSwFYs=","exportNames":["*"]}},{"name":"./isWeekend.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":257},"end":{"line":6,"column":43,"index":300}}],"key":"tXlvsFxnziLZ0ZC1PO3HjxsfNHs=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  exports.differenceInBusinessDays = differenceInBusinessDays;\n  var _normalizeDates = require(_dependencyMap[0], \"./_lib/normalizeDates.js\");\n  var _addDays = require(_dependencyMap[1], \"./addDays.js\");\n  var _differenceInCalendarDays = require(_dependencyMap[2], \"./differenceInCalendarDays.js\");\n  var _isSameDay = require(_dependencyMap[3], \"./isSameDay.js\");\n  var _isValid = require(_dependencyMap[4], \"./isValid.js\");\n  var _isWeekend = require(_dependencyMap[5], \"./isWeekend.js\");\n  /**\n   * The {@link differenceInBusinessDays} function options.\n   */\n\n  /**\n   * @name differenceInBusinessDays\n   * @category Day Helpers\n   * @summary Get the number of business days between the given dates.\n   *\n   * @description\n   * Get the number of business day periods between the given dates.\n   * Business days being days that aren't in the weekend.\n   * Like `differenceInCalendarDays`, the function removes the times from\n   * the dates before calculating the difference.\n   *\n   * @param laterDate - The later date\n   * @param earlierDate - The earlier date\n   * @param options - An object with options\n   *\n   * @returns The number of business days\n   *\n   * @example\n   * // How many business days are between\n   * // 10 January 2014 and 20 July 2014?\n   * const result = differenceInBusinessDays(\n   *   new Date(2014, 6, 20),\n   *   new Date(2014, 0, 10)\n   * )\n   * //=> 136\n   *\n   * // How many business days are between\n   * // 30 November 2021 and 1 November 2021?\n   * const result = differenceInBusinessDays(\n   *   new Date(2021, 10, 30),\n   *   new Date(2021, 10, 1)\n   * )\n   * //=> 21\n   *\n   * // How many business days are between\n   * // 1 November 2021 and 1 December 2021?\n   * const result = differenceInBusinessDays(\n   *   new Date(2021, 10, 1),\n   *   new Date(2021, 11, 1)\n   * )\n   * //=> -22\n   *\n   * // How many business days are between\n   * // 1 November 2021 and 1 November 2021 ?\n   * const result = differenceInBusinessDays(\n   *   new Date(2021, 10, 1),\n   *   new Date(2021, 10, 1)\n   * )\n   * //=> 0\n   */\n  function differenceInBusinessDays(laterDate, earlierDate, options) {\n    const [laterDate_, earlierDate_] = (0, _normalizeDates.normalizeDates)(options?.in, laterDate, earlierDate);\n    if (!(0, _isValid.isValid)(laterDate_) || !(0, _isValid.isValid)(earlierDate_)) return NaN;\n    const diff = (0, _differenceInCalendarDays.differenceInCalendarDays)(laterDate_, earlierDate_);\n    const sign = diff < 0 ? -1 : 1;\n    const weeks = Math.trunc(diff / 7);\n    let result = weeks * 5;\n    let movingDate = (0, _addDays.addDays)(earlierDate_, weeks * 7);\n\n    // the loop below will run at most 6 times to account for the remaining days that don't makeup a full week\n    while (!(0, _isSameDay.isSameDay)(laterDate_, movingDate)) {\n      // sign is used to account for both negative and positive differences\n      result += (0, _isWeekend.isWeekend)(movingDate, options) ? 0 : sign;\n      movingDate = (0, _addDays.addDays)(movingDate, sign);\n    }\n\n    // Prevent negative zero\n    return result === 0 ? 0 : result;\n  }\n\n  // Fallback for modularized imports:\n  var _default = exports.default = differenceInBusinessDays;\n});","lineCount":89,"map":[[7,2,1,0],[7,6,1,0,"_normalizeDates"],[7,21,1,0],[7,24,1,0,"require"],[7,31,1,0],[7,32,1,0,"_dependencyMap"],[7,46,1,0],[8,2,2,0],[8,6,2,0,"_addDays"],[8,14,2,0],[8,17,2,0,"require"],[8,24,2,0],[8,25,2,0,"_dependencyMap"],[8,39,2,0],[9,2,3,0],[9,6,3,0,"_differenceInCalendarDays"],[9,31,3,0],[9,34,3,0,"require"],[9,41,3,0],[9,42,3,0,"_dependencyMap"],[9,56,3,0],[10,2,4,0],[10,6,4,0,"_isSameDay"],[10,16,4,0],[10,19,4,0,"require"],[10,26,4,0],[10,27,4,0,"_dependencyMap"],[10,41,4,0],[11,2,5,0],[11,6,5,0,"_isValid"],[11,14,5,0],[11,17,5,0,"require"],[11,24,5,0],[11,25,5,0,"_dependencyMap"],[11,39,5,0],[12,2,6,0],[12,6,6,0,"_isWeekend"],[12,16,6,0],[12,19,6,0,"require"],[12,26,6,0],[12,27,6,0,"_dependencyMap"],[12,41,6,0],[13,2,8,0],[14,0,9,0],[15,0,10,0],[17,2,12,0],[18,0,13,0],[19,0,14,0],[20,0,15,0],[21,0,16,0],[22,0,17,0],[23,0,18,0],[24,0,19,0],[25,0,20,0],[26,0,21,0],[27,0,22,0],[28,0,23,0],[29,0,24,0],[30,0,25,0],[31,0,26,0],[32,0,27,0],[33,0,28,0],[34,0,29,0],[35,0,30,0],[36,0,31,0],[37,0,32,0],[38,0,33,0],[39,0,34,0],[40,0,35,0],[41,0,36,0],[42,0,37,0],[43,0,38,0],[44,0,39,0],[45,0,40,0],[46,0,41,0],[47,0,42,0],[48,0,43,0],[49,0,44,0],[50,0,45,0],[51,0,46,0],[52,0,47,0],[53,0,48,0],[54,0,49,0],[55,0,50,0],[56,0,51,0],[57,0,52,0],[58,0,53,0],[59,0,54,0],[60,0,55,0],[61,0,56,0],[62,0,57,0],[63,0,58,0],[64,0,59,0],[65,0,60,0],[66,0,61,0],[67,2,62,7],[67,11,62,16,"differenceInBusinessDays"],[67,35,62,40,"differenceInBusinessDays"],[67,36,62,41,"laterDate"],[67,45,62,50],[67,47,62,52,"earlierDate"],[67,58,62,63],[67,60,62,65,"options"],[67,67,62,72],[67,69,62,74],[68,4,63,2],[68,10,63,8],[68,11,63,9,"laterDate_"],[68,21,63,19],[68,23,63,21,"earlierDate_"],[68,35,63,33],[68,36,63,34],[68,39,63,37],[68,43,63,37,"normalizeDates"],[68,73,63,51],[68,75,64,4,"options"],[68,82,64,11],[68,84,64,13,"in"],[68,86,64,15],[68,88,65,4,"laterDate"],[68,97,65,13],[68,99,66,4,"earlierDate"],[68,110,67,2],[68,111,67,3],[69,4,69,2],[69,8,69,6],[69,9,69,7],[69,13,69,7,"isValid"],[69,29,69,14],[69,31,69,15,"laterDate_"],[69,41,69,25],[69,42,69,26],[69,46,69,30],[69,47,69,31],[69,51,69,31,"isValid"],[69,67,69,38],[69,69,69,39,"earlierDate_"],[69,81,69,51],[69,82,69,52],[69,84,69,54],[69,91,69,61,"NaN"],[69,94,69,64],[70,4,71,2],[70,10,71,8,"diff"],[70,14,71,12],[70,17,71,15],[70,21,71,15,"differenceInCalendarDays"],[70,71,71,39],[70,73,71,40,"laterDate_"],[70,83,71,50],[70,85,71,52,"earlierDate_"],[70,97,71,64],[70,98,71,65],[71,4,72,2],[71,10,72,8,"sign"],[71,14,72,12],[71,17,72,15,"diff"],[71,21,72,19],[71,24,72,22],[71,25,72,23],[71,28,72,26],[71,29,72,27],[71,30,72,28],[71,33,72,31],[71,34,72,32],[72,4,73,2],[72,10,73,8,"weeks"],[72,15,73,13],[72,18,73,16,"Math"],[72,22,73,20],[72,23,73,21,"trunc"],[72,28,73,26],[72,29,73,27,"diff"],[72,33,73,31],[72,36,73,34],[72,37,73,35],[72,38,73,36],[73,4,75,2],[73,8,75,6,"result"],[73,14,75,12],[73,17,75,15,"weeks"],[73,22,75,20],[73,25,75,23],[73,26,75,24],[74,4,76,2],[74,8,76,6,"movingDate"],[74,18,76,16],[74,21,76,19],[74,25,76,19,"addDays"],[74,41,76,26],[74,43,76,27,"earlierDate_"],[74,55,76,39],[74,57,76,41,"weeks"],[74,62,76,46],[74,65,76,49],[74,66,76,50],[74,67,76,51],[76,4,78,2],[77,4,79,2],[77,11,79,9],[77,12,79,10],[77,16,79,10,"isSameDay"],[77,36,79,19],[77,38,79,20,"laterDate_"],[77,48,79,30],[77,50,79,32,"movingDate"],[77,60,79,42],[77,61,79,43],[77,63,79,45],[78,6,80,4],[79,6,81,4,"result"],[79,12,81,10],[79,16,81,14],[79,20,81,14,"isWeekend"],[79,40,81,23],[79,42,81,24,"movingDate"],[79,52,81,34],[79,54,81,36,"options"],[79,61,81,43],[79,62,81,44],[79,65,81,47],[79,66,81,48],[79,69,81,51,"sign"],[79,73,81,55],[80,6,82,4,"movingDate"],[80,16,82,14],[80,19,82,17],[80,23,82,17,"addDays"],[80,39,82,24],[80,41,82,25,"movingDate"],[80,51,82,35],[80,53,82,37,"sign"],[80,57,82,41],[80,58,82,42],[81,4,83,2],[83,4,85,2],[84,4,86,2],[84,11,86,9,"result"],[84,17,86,15],[84,22,86,20],[84,23,86,21],[84,26,86,24],[84,27,86,25],[84,30,86,28,"result"],[84,36,86,34],[85,2,87,0],[87,2,89,0],[88,2,89,0],[88,6,89,0,"_default"],[88,14,89,0],[88,17,89,0,"exports"],[88,24,89,0],[88,25,89,0,"default"],[88,32,89,0],[88,35,90,15,"differenceInBusinessDays"],[88,59,90,39],[89,0,90,39],[89,3]],"functionMap":{"names":["<global>","differenceInBusinessDays"],"mappings":"AAA;OC6D;CDyB"}},"type":"js/module"}]}