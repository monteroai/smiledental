{"dependencies":[{"name":"./_lib/defaultLocale.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":56,"index":56}}],"key":"pt9gPO2ve6GSRFbXPAQkm4R9a2w=","exportNames":["*"]}},{"name":"./_lib/defaultOptions.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":57},"end":{"line":2,"column":61,"index":118}}],"key":"RLyj7w3ZPZGGUSjkcz/7nwwn2xo=","exportNames":["*"]}},{"name":"./_lib/normalizeDates.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":119},"end":{"line":3,"column":58,"index":177}}],"key":"p2HPneHw/OdTsxe3h3dVkKepjMk=","exportNames":["*"]}},{"name":"./differenceInCalendarDays.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":178},"end":{"line":4,"column":73,"index":251}}],"key":"imq/EGPR6TLwAkGUJvGZSPH1SeI=","exportNames":["*"]}},{"name":"./format.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":252},"end":{"line":5,"column":37,"index":289}}],"key":"v94PpL1TgFUiqcd5HFSWAhbi5q4=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  exports.formatRelative = formatRelative;\n  var _defaultLocale = require(_dependencyMap[0], \"./_lib/defaultLocale.js\");\n  var _defaultOptions = require(_dependencyMap[1], \"./_lib/defaultOptions.js\");\n  var _normalizeDates = require(_dependencyMap[2], \"./_lib/normalizeDates.js\");\n  var _differenceInCalendarDays = require(_dependencyMap[3], \"./differenceInCalendarDays.js\");\n  var _format = require(_dependencyMap[4], \"./format.js\");\n  /**\n   * The {@link formatRelative} function options.\n   */\n\n  /**\n   * @name formatRelative\n   * @category Common Helpers\n   * @summary Represent the date in words relative to the given base date.\n   *\n   * @description\n   * Represent the date in words relative to the given base date.\n   *\n   * | Distance to the base date | Result                    |\n   * |---------------------------|---------------------------|\n   * | Previous 6 days           | last Sunday at 04:30 AM   |\n   * | Last day                  | yesterday at 04:30 AM     |\n   * | Same day                  | today at 04:30 AM         |\n   * | Next day                  | tomorrow at 04:30 AM      |\n   * | Next 6 days               | Sunday at 04:30 AM        |\n   * | Other                     | 12/31/2017                |\n   *\n   * @param date - The date to format\n   * @param baseDate - The date to compare with\n   * @param options - An object with options\n   *\n   * @returns The date in words\n   *\n   * @throws `date` must not be Invalid Date\n   * @throws `baseDate` must not be Invalid Date\n   * @throws `options.locale` must contain `localize` property\n   * @throws `options.locale` must contain `formatLong` property\n   * @throws `options.locale` must contain `formatRelative` property\n   *\n   * @example\n   * // Represent the date of 6 days ago in words relative to the given base date. In this example, today is Wednesday\n   * const result = formatRelative(subDays(new Date(), 6), new Date())\n   * //=> \"last Thursday at 12:45 AM\"\n   */\n  function formatRelative(date, baseDate, options) {\n    const [date_, baseDate_] = (0, _normalizeDates.normalizeDates)(options?.in, date, baseDate);\n    const defaultOptions = (0, _defaultOptions.getDefaultOptions)();\n    const locale = options?.locale ?? defaultOptions.locale ?? _defaultLocale.defaultLocale;\n    const weekStartsOn = options?.weekStartsOn ?? options?.locale?.options?.weekStartsOn ?? defaultOptions.weekStartsOn ?? defaultOptions.locale?.options?.weekStartsOn ?? 0;\n    const diff = (0, _differenceInCalendarDays.differenceInCalendarDays)(date_, baseDate_);\n    if (isNaN(diff)) {\n      throw new RangeError(\"Invalid time value\");\n    }\n    let token;\n    if (diff < -6) {\n      token = \"other\";\n    } else if (diff < -1) {\n      token = \"lastWeek\";\n    } else if (diff < 0) {\n      token = \"yesterday\";\n    } else if (diff < 1) {\n      token = \"today\";\n    } else if (diff < 2) {\n      token = \"tomorrow\";\n    } else if (diff < 7) {\n      token = \"nextWeek\";\n    } else {\n      token = \"other\";\n    }\n    const formatStr = locale.formatRelative(token, date_, baseDate_, {\n      locale,\n      weekStartsOn\n    });\n    return (0, _format.format)(date_, formatStr, {\n      locale,\n      weekStartsOn\n    });\n  }\n\n  // Fallback for modularized imports:\n  var _default = exports.default = formatRelative;\n});","lineCount":87,"map":[[7,2,1,0],[7,6,1,0,"_defaultLocale"],[7,20,1,0],[7,23,1,0,"require"],[7,30,1,0],[7,31,1,0,"_dependencyMap"],[7,45,1,0],[8,2,2,0],[8,6,2,0,"_defaultOptions"],[8,21,2,0],[8,24,2,0,"require"],[8,31,2,0],[8,32,2,0,"_dependencyMap"],[8,46,2,0],[9,2,3,0],[9,6,3,0,"_normalizeDates"],[9,21,3,0],[9,24,3,0,"require"],[9,31,3,0],[9,32,3,0,"_dependencyMap"],[9,46,3,0],[10,2,4,0],[10,6,4,0,"_differenceInCalendarDays"],[10,31,4,0],[10,34,4,0,"require"],[10,41,4,0],[10,42,4,0,"_dependencyMap"],[10,56,4,0],[11,2,5,0],[11,6,5,0,"_format"],[11,13,5,0],[11,16,5,0,"require"],[11,23,5,0],[11,24,5,0,"_dependencyMap"],[11,38,5,0],[12,2,7,0],[13,0,8,0],[14,0,9,0],[16,2,11,0],[17,0,12,0],[18,0,13,0],[19,0,14,0],[20,0,15,0],[21,0,16,0],[22,0,17,0],[23,0,18,0],[24,0,19,0],[25,0,20,0],[26,0,21,0],[27,0,22,0],[28,0,23,0],[29,0,24,0],[30,0,25,0],[31,0,26,0],[32,0,27,0],[33,0,28,0],[34,0,29,0],[35,0,30,0],[36,0,31,0],[37,0,32,0],[38,0,33,0],[39,0,34,0],[40,0,35,0],[41,0,36,0],[42,0,37,0],[43,0,38,0],[44,0,39,0],[45,0,40,0],[46,0,41,0],[47,0,42,0],[48,0,43,0],[49,0,44,0],[50,2,45,7],[50,11,45,16,"formatRelative"],[50,25,45,30,"formatRelative"],[50,26,45,31,"date"],[50,30,45,35],[50,32,45,37,"baseDate"],[50,40,45,45],[50,42,45,47,"options"],[50,49,45,54],[50,51,45,56],[51,4,46,2],[51,10,46,8],[51,11,46,9,"date_"],[51,16,46,14],[51,18,46,16,"baseDate_"],[51,27,46,25],[51,28,46,26],[51,31,46,29],[51,35,46,29,"normalizeDates"],[51,65,46,43],[51,67,46,44,"options"],[51,74,46,51],[51,76,46,53,"in"],[51,78,46,55],[51,80,46,57,"date"],[51,84,46,61],[51,86,46,63,"baseDate"],[51,94,46,71],[51,95,46,72],[52,4,48,2],[52,10,48,8,"defaultOptions"],[52,24,48,22],[52,27,48,25],[52,31,48,25,"getDefaultOptions"],[52,64,48,42],[52,66,48,43],[52,67,48,44],[53,4,49,2],[53,10,49,8,"locale"],[53,16,49,14],[53,19,49,17,"options"],[53,26,49,24],[53,28,49,26,"locale"],[53,34,49,32],[53,38,49,36,"defaultOptions"],[53,52,49,50],[53,53,49,51,"locale"],[53,59,49,57],[53,63,49,61,"defaultLocale"],[53,91,49,74],[54,4,50,2],[54,10,50,8,"weekStartsOn"],[54,22,50,20],[54,25,51,4,"options"],[54,32,51,11],[54,34,51,13,"weekStartsOn"],[54,46,51,25],[54,50,52,4,"options"],[54,57,52,11],[54,59,52,13,"locale"],[54,65,52,19],[54,67,52,21,"options"],[54,74,52,28],[54,76,52,30,"weekStartsOn"],[54,88,52,42],[54,92,53,4,"defaultOptions"],[54,106,53,18],[54,107,53,19,"weekStartsOn"],[54,119,53,31],[54,123,54,4,"defaultOptions"],[54,137,54,18],[54,138,54,19,"locale"],[54,144,54,25],[54,146,54,27,"options"],[54,153,54,34],[54,155,54,36,"weekStartsOn"],[54,167,54,48],[54,171,55,4],[54,172,55,5],[55,4,57,2],[55,10,57,8,"diff"],[55,14,57,12],[55,17,57,15],[55,21,57,15,"differenceInCalendarDays"],[55,71,57,39],[55,73,57,40,"date_"],[55,78,57,45],[55,80,57,47,"baseDate_"],[55,89,57,56],[55,90,57,57],[56,4,59,2],[56,8,59,6,"isNaN"],[56,13,59,11],[56,14,59,12,"diff"],[56,18,59,16],[56,19,59,17],[56,21,59,19],[57,6,60,4],[57,12,60,10],[57,16,60,14,"RangeError"],[57,26,60,24],[57,27,60,25],[57,47,60,45],[57,48,60,46],[58,4,61,2],[59,4,63,2],[59,8,63,6,"token"],[59,13,63,11],[60,4,64,2],[60,8,64,6,"diff"],[60,12,64,10],[60,15,64,13],[60,16,64,14],[60,17,64,15],[60,19,64,17],[61,6,65,4,"token"],[61,11,65,9],[61,14,65,12],[61,21,65,19],[62,4,66,2],[62,5,66,3],[62,11,66,9],[62,15,66,13,"diff"],[62,19,66,17],[62,22,66,20],[62,23,66,21],[62,24,66,22],[62,26,66,24],[63,6,67,4,"token"],[63,11,67,9],[63,14,67,12],[63,24,67,22],[64,4,68,2],[64,5,68,3],[64,11,68,9],[64,15,68,13,"diff"],[64,19,68,17],[64,22,68,20],[64,23,68,21],[64,25,68,23],[65,6,69,4,"token"],[65,11,69,9],[65,14,69,12],[65,25,69,23],[66,4,70,2],[66,5,70,3],[66,11,70,9],[66,15,70,13,"diff"],[66,19,70,17],[66,22,70,20],[66,23,70,21],[66,25,70,23],[67,6,71,4,"token"],[67,11,71,9],[67,14,71,12],[67,21,71,19],[68,4,72,2],[68,5,72,3],[68,11,72,9],[68,15,72,13,"diff"],[68,19,72,17],[68,22,72,20],[68,23,72,21],[68,25,72,23],[69,6,73,4,"token"],[69,11,73,9],[69,14,73,12],[69,24,73,22],[70,4,74,2],[70,5,74,3],[70,11,74,9],[70,15,74,13,"diff"],[70,19,74,17],[70,22,74,20],[70,23,74,21],[70,25,74,23],[71,6,75,4,"token"],[71,11,75,9],[71,14,75,12],[71,24,75,22],[72,4,76,2],[72,5,76,3],[72,11,76,9],[73,6,77,4,"token"],[73,11,77,9],[73,14,77,12],[73,21,77,19],[74,4,78,2],[75,4,80,2],[75,10,80,8,"formatStr"],[75,19,80,17],[75,22,80,20,"locale"],[75,28,80,26],[75,29,80,27,"formatRelative"],[75,43,80,41],[75,44,80,42,"token"],[75,49,80,47],[75,51,80,49,"date_"],[75,56,80,54],[75,58,80,56,"baseDate_"],[75,67,80,65],[75,69,80,67],[76,6,81,4,"locale"],[76,12,81,10],[77,6,82,4,"weekStartsOn"],[78,4,83,2],[78,5,83,3],[78,6,83,4],[79,4,84,2],[79,11,84,9],[79,15,84,9,"format"],[79,29,84,15],[79,31,84,16,"date_"],[79,36,84,21],[79,38,84,23,"formatStr"],[79,47,84,32],[79,49,84,34],[80,6,84,36,"locale"],[80,12,84,42],[81,6,84,44,"weekStartsOn"],[82,4,84,57],[82,5,84,58],[82,6,84,59],[83,2,85,0],[85,2,87,0],[86,2,87,0],[86,6,87,0,"_default"],[86,14,87,0],[86,17,87,0,"exports"],[86,24,87,0],[86,25,87,0,"default"],[86,32,87,0],[86,35,88,15,"formatRelative"],[86,49,88,29],[87,0,88,29],[87,3]],"functionMap":{"names":["<global>","formatRelative"],"mappings":"AAA;OC4C;CDwC"}},"type":"js/module"}]}