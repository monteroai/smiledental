{"dependencies":[{"name":"../constants.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":50,"index":50}}],"key":"w33QN4nlqAZn5CNK6M5HKbLWgBA=","exportNames":["*"]}},{"name":"../Parser.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":51},"end":{"line":2,"column":38,"index":89}}],"key":"CIJslq/MUqKep4ImmeyUTywuBTk=","exportNames":["*"]}},{"name":"../utils.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":91},"end":{"line":4,"column":74,"index":165}}],"key":"dGswK136diHRCgUa8xpQUn/UMbc=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.MonthParser = void 0;\n  var _constants = require(_dependencyMap[0], \"../constants.js\");\n  var _Parser = require(_dependencyMap[1], \"../Parser.js\");\n  var _utils = require(_dependencyMap[2], \"../utils.js\");\n  class MonthParser extends _Parser.Parser {\n    incompatibleTokens = [\"Y\", \"R\", \"q\", \"Q\", \"L\", \"w\", \"I\", \"D\", \"i\", \"e\", \"c\", \"t\", \"T\"];\n    priority = 110;\n    parse(dateString, token, match) {\n      const valueCallback = value => value - 1;\n      switch (token) {\n        // 1, 2, ..., 12\n        case \"M\":\n          return (0, _utils.mapValue)((0, _utils.parseNumericPattern)(_constants.numericPatterns.month, dateString), valueCallback);\n        // 01, 02, ..., 12\n        case \"MM\":\n          return (0, _utils.mapValue)((0, _utils.parseNDigits)(2, dateString), valueCallback);\n        // 1st, 2nd, ..., 12th\n        case \"Mo\":\n          return (0, _utils.mapValue)(match.ordinalNumber(dateString, {\n            unit: \"month\"\n          }), valueCallback);\n        // Jan, Feb, ..., Dec\n        case \"MMM\":\n          return match.month(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\"\n          }) || match.month(dateString, {\n            width: \"narrow\",\n            context: \"formatting\"\n          });\n\n        // J, F, ..., D\n        case \"MMMMM\":\n          return match.month(dateString, {\n            width: \"narrow\",\n            context: \"formatting\"\n          });\n        // January, February, ..., December\n        case \"MMMM\":\n        default:\n          return match.month(dateString, {\n            width: \"wide\",\n            context: \"formatting\"\n          }) || match.month(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\"\n          }) || match.month(dateString, {\n            width: \"narrow\",\n            context: \"formatting\"\n          });\n      }\n    }\n    validate(_date, value) {\n      return value >= 0 && value <= 11;\n    }\n    set(date, _flags, value) {\n      date.setMonth(value, 1);\n      date.setHours(0, 0, 0, 0);\n      return date;\n    }\n  }\n  exports.MonthParser = MonthParser;\n});","lineCount":67,"map":[[6,2,1,0],[6,6,1,0,"_constants"],[6,16,1,0],[6,19,1,0,"require"],[6,26,1,0],[6,27,1,0,"_dependencyMap"],[6,41,1,0],[7,2,2,0],[7,6,2,0,"_Parser"],[7,13,2,0],[7,16,2,0,"require"],[7,23,2,0],[7,24,2,0,"_dependencyMap"],[7,38,2,0],[8,2,4,0],[8,6,4,0,"_utils"],[8,12,4,0],[8,15,4,0,"require"],[8,22,4,0],[8,23,4,0,"_dependencyMap"],[8,37,4,0],[9,2,6,7],[9,8,6,13,"MonthParser"],[9,19,6,24],[9,28,6,33,"Parser"],[9,42,6,39],[9,43,6,40],[10,4,7,2,"incompatibleTokens"],[10,22,7,20],[10,25,7,23],[10,26,8,4],[10,29,8,7],[10,31,9,4],[10,34,9,7],[10,36,10,4],[10,39,10,7],[10,41,11,4],[10,44,11,7],[10,46,12,4],[10,49,12,7],[10,51,13,4],[10,54,13,7],[10,56,14,4],[10,59,14,7],[10,61,15,4],[10,64,15,7],[10,66,16,4],[10,69,16,7],[10,71,17,4],[10,74,17,7],[10,76,18,4],[10,79,18,7],[10,81,19,4],[10,84,19,7],[10,86,20,4],[10,89,20,7],[10,90,21,3],[11,4,23,2,"priority"],[11,12,23,10],[11,15,23,13],[11,18,23,16],[12,4,25,2,"parse"],[12,9,25,7,"parse"],[12,10,25,8,"dateString"],[12,20,25,18],[12,22,25,20,"token"],[12,27,25,25],[12,29,25,27,"match"],[12,34,25,32],[12,36,25,34],[13,6,26,4],[13,12,26,10,"valueCallback"],[13,25,26,23],[13,28,26,27,"value"],[13,33,26,32],[13,37,26,37,"value"],[13,42,26,42],[13,45,26,45],[13,46,26,46],[14,6,28,4],[14,14,28,12,"token"],[14,19,28,17],[15,8,29,6],[16,8,30,6],[16,13,30,11],[16,16,30,14],[17,10,31,8],[17,17,31,15],[17,21,31,15,"mapValue"],[17,36,31,23],[17,38,32,10],[17,42,32,10,"parseNumericPattern"],[17,68,32,29],[17,70,32,30,"numericPatterns"],[17,96,32,45],[17,97,32,46,"month"],[17,102,32,51],[17,104,32,53,"dateString"],[17,114,32,63],[17,115,32,64],[17,117,33,10,"valueCallback"],[17,130,34,8],[17,131,34,9],[18,8,35,6],[19,8,36,6],[19,13,36,11],[19,17,36,15],[20,10,37,8],[20,17,37,15],[20,21,37,15,"mapValue"],[20,36,37,23],[20,38,37,24],[20,42,37,24,"parseNDigits"],[20,61,37,36],[20,63,37,37],[20,64,37,38],[20,66,37,40,"dateString"],[20,76,37,50],[20,77,37,51],[20,79,37,53,"valueCallback"],[20,92,37,66],[20,93,37,67],[21,8,38,6],[22,8,39,6],[22,13,39,11],[22,17,39,15],[23,10,40,8],[23,17,40,15],[23,21,40,15,"mapValue"],[23,36,40,23],[23,38,41,10,"match"],[23,43,41,15],[23,44,41,16,"ordinalNumber"],[23,57,41,29],[23,58,41,30,"dateString"],[23,68,41,40],[23,70,41,42],[24,12,42,12,"unit"],[24,16,42,16],[24,18,42,18],[25,10,43,10],[25,11,43,11],[25,12,43,12],[25,14,44,10,"valueCallback"],[25,27,45,8],[25,28,45,9],[26,8,46,6],[27,8,47,6],[27,13,47,11],[27,18,47,16],[28,10,48,8],[28,17,49,10,"match"],[28,22,49,15],[28,23,49,16,"month"],[28,28,49,21],[28,29,49,22,"dateString"],[28,39,49,32],[28,41,49,34],[29,12,50,12,"width"],[29,17,50,17],[29,19,50,19],[29,32,50,32],[30,12,51,12,"context"],[30,19,51,19],[30,21,51,21],[31,10,52,10],[31,11,52,11],[31,12,52,12],[31,16,53,10,"match"],[31,21,53,15],[31,22,53,16,"month"],[31,27,53,21],[31,28,53,22,"dateString"],[31,38,53,32],[31,40,53,34],[32,12,53,36,"width"],[32,17,53,41],[32,19,53,43],[32,27,53,51],[33,12,53,53,"context"],[33,19,53,60],[33,21,53,62],[34,10,53,75],[34,11,53,76],[34,12,53,77],[36,8,56,6],[37,8,57,6],[37,13,57,11],[37,20,57,18],[38,10,58,8],[38,17,58,15,"match"],[38,22,58,20],[38,23,58,21,"month"],[38,28,58,26],[38,29,58,27,"dateString"],[38,39,58,37],[38,41,58,39],[39,12,59,10,"width"],[39,17,59,15],[39,19,59,17],[39,27,59,25],[40,12,60,10,"context"],[40,19,60,17],[40,21,60,19],[41,10,61,8],[41,11,61,9],[41,12,61,10],[42,8,62,6],[43,8,63,6],[43,13,63,11],[43,19,63,17],[44,8,64,6],[45,10,65,8],[45,17,66,10,"match"],[45,22,66,15],[45,23,66,16,"month"],[45,28,66,21],[45,29,66,22,"dateString"],[45,39,66,32],[45,41,66,34],[46,12,66,36,"width"],[46,17,66,41],[46,19,66,43],[46,25,66,49],[47,12,66,51,"context"],[47,19,66,58],[47,21,66,60],[48,10,66,73],[48,11,66,74],[48,12,66,75],[48,16,67,10,"match"],[48,21,67,15],[48,22,67,16,"month"],[48,27,67,21],[48,28,67,22,"dateString"],[48,38,67,32],[48,40,67,34],[49,12,68,12,"width"],[49,17,68,17],[49,19,68,19],[49,32,68,32],[50,12,69,12,"context"],[50,19,69,19],[50,21,69,21],[51,10,70,10],[51,11,70,11],[51,12,70,12],[51,16,71,10,"match"],[51,21,71,15],[51,22,71,16,"month"],[51,27,71,21],[51,28,71,22,"dateString"],[51,38,71,32],[51,40,71,34],[52,12,71,36,"width"],[52,17,71,41],[52,19,71,43],[52,27,71,51],[53,12,71,53,"context"],[53,19,71,60],[53,21,71,62],[54,10,71,75],[54,11,71,76],[54,12,71,77],[55,6,73,4],[56,4,74,2],[57,4,76,2,"validate"],[57,12,76,10,"validate"],[57,13,76,11,"_date"],[57,18,76,16],[57,20,76,18,"value"],[57,25,76,23],[57,27,76,25],[58,6,77,4],[58,13,77,11,"value"],[58,18,77,16],[58,22,77,20],[58,23,77,21],[58,27,77,25,"value"],[58,32,77,30],[58,36,77,34],[58,38,77,36],[59,4,78,2],[60,4,80,2,"set"],[60,7,80,5,"set"],[60,8,80,6,"date"],[60,12,80,10],[60,14,80,12,"_flags"],[60,20,80,18],[60,22,80,20,"value"],[60,27,80,25],[60,29,80,27],[61,6,81,4,"date"],[61,10,81,8],[61,11,81,9,"setMonth"],[61,19,81,17],[61,20,81,18,"value"],[61,25,81,23],[61,27,81,25],[61,28,81,26],[61,29,81,27],[62,6,82,4,"date"],[62,10,82,8],[62,11,82,9,"setHours"],[62,19,82,17],[62,20,82,18],[62,21,82,19],[62,23,82,21],[62,24,82,22],[62,26,82,24],[62,27,82,25],[62,29,82,27],[62,30,82,28],[62,31,82,29],[63,6,83,4],[63,13,83,11,"date"],[63,17,83,15],[64,4,84,2],[65,2,85,0],[66,2,85,1,"exports"],[66,9,85,1],[66,10,85,1,"MonthParser"],[66,21,85,1],[66,24,85,1,"MonthParser"],[66,35,85,1],[67,0,85,1],[67,3]],"functionMap":{"names":["<global>","MonthParser","parse","valueCallback","validate","set"],"mappings":"AAA;OCK;ECmB;0BCC,oBD;GDgD;EGE;GHE;EIE;GJI;CDC"}},"type":"js/module"}]}