{"dependencies":[{"name":"./_lib/normalizeDates.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":58,"index":58}}],"key":"p2HPneHw/OdTsxe3h3dVkKepjMk=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  exports.interval = interval;\n  var _normalizeDates = require(_dependencyMap[0], \"./_lib/normalizeDates.js\");\n  /**\n   * The {@link interval} function options.\n   */\n\n  /**\n   * The {@link interval} function result type. It resolves the proper data type.\n   * It uses the first argument date object type, starting from the start argument,\n   * then the end interval date. If a context function is passed, it uses the context\n   * function return type.\n   */\n\n  /**\n   * @name interval\n   * @category Interval Helpers\n   * @summary Creates an interval object and validates its values.\n   *\n   * @description\n   * Creates a normalized interval object and validates its values. If the interval is invalid, an exception is thrown.\n   *\n   * @typeParam StartDate - Start date type.\n   * @typeParam EndDate - End date type.\n   * @typeParam Options - Options type.\n   *\n   * @param start - The start of the interval.\n   * @param end - The end of the interval.\n   * @param options - The options object.\n   *\n   * @throws `Start date is invalid` when `start` is invalid.\n   * @throws `End date is invalid` when `end` is invalid.\n   * @throws `End date must be after start date` when end is before `start` and `options.assertPositive` is true.\n   *\n   * @returns The normalized and validated interval object.\n   */\n  function interval(start, end, options) {\n    const [_start, _end] = (0, _normalizeDates.normalizeDates)(options?.in, start, end);\n    if (isNaN(+_start)) throw new TypeError(\"Start date is invalid\");\n    if (isNaN(+_end)) throw new TypeError(\"End date is invalid\");\n    if (options?.assertPositive && +_start > +_end) throw new TypeError(\"End date must be after start date\");\n    return {\n      start: _start,\n      end: _end\n    };\n  }\n\n  // Fallback for modularized imports:\n  var _default = exports.default = interval;\n});","lineCount":54,"map":[[7,2,1,0],[7,6,1,0,"_normalizeDates"],[7,21,1,0],[7,24,1,0,"require"],[7,31,1,0],[7,32,1,0,"_dependencyMap"],[7,46,1,0],[8,2,3,0],[9,0,4,0],[10,0,5,0],[12,2,7,0],[13,0,8,0],[14,0,9,0],[15,0,10,0],[16,0,11,0],[17,0,12,0],[19,2,14,0],[20,0,15,0],[21,0,16,0],[22,0,17,0],[23,0,18,0],[24,0,19,0],[25,0,20,0],[26,0,21,0],[27,0,22,0],[28,0,23,0],[29,0,24,0],[30,0,25,0],[31,0,26,0],[32,0,27,0],[33,0,28,0],[34,0,29,0],[35,0,30,0],[36,0,31,0],[37,0,32,0],[38,0,33,0],[39,0,34,0],[40,0,35,0],[41,2,36,7],[41,11,36,16,"interval"],[41,19,36,24,"interval"],[41,20,36,25,"start"],[41,25,36,30],[41,27,36,32,"end"],[41,30,36,35],[41,32,36,37,"options"],[41,39,36,44],[41,41,36,46],[42,4,37,2],[42,10,37,8],[42,11,37,9,"_start"],[42,17,37,15],[42,19,37,17,"_end"],[42,23,37,21],[42,24,37,22],[42,27,37,25],[42,31,37,25,"normalizeDates"],[42,61,37,39],[42,63,37,40,"options"],[42,70,37,47],[42,72,37,49,"in"],[42,74,37,51],[42,76,37,53,"start"],[42,81,37,58],[42,83,37,60,"end"],[42,86,37,63],[42,87,37,64],[43,4,39,2],[43,8,39,6,"isNaN"],[43,13,39,11],[43,14,39,12],[43,15,39,13,"_start"],[43,21,39,19],[43,22,39,20],[43,24,39,22],[43,30,39,28],[43,34,39,32,"TypeError"],[43,43,39,41],[43,44,39,42],[43,67,39,65],[43,68,39,66],[44,4,40,2],[44,8,40,6,"isNaN"],[44,13,40,11],[44,14,40,12],[44,15,40,13,"_end"],[44,19,40,17],[44,20,40,18],[44,22,40,20],[44,28,40,26],[44,32,40,30,"TypeError"],[44,41,40,39],[44,42,40,40],[44,63,40,61],[44,64,40,62],[45,4,42,2],[45,8,42,6,"options"],[45,15,42,13],[45,17,42,15,"assertPositive"],[45,31,42,29],[45,35,42,33],[45,36,42,34,"_start"],[45,42,42,40],[45,45,42,43],[45,46,42,44,"_end"],[45,50,42,48],[45,52,43,4],[45,58,43,10],[45,62,43,14,"TypeError"],[45,71,43,23],[45,72,43,24],[45,107,43,59],[45,108,43,60],[46,4,45,2],[46,11,45,9],[47,6,45,11,"start"],[47,11,45,16],[47,13,45,18,"_start"],[47,19,45,24],[48,6,45,26,"end"],[48,9,45,29],[48,11,45,31,"_end"],[49,4,45,36],[49,5,45,37],[50,2,46,0],[52,2,48,0],[53,2,48,0],[53,6,48,0,"_default"],[53,14,48,0],[53,17,48,0,"exports"],[53,24,48,0],[53,25,48,0,"default"],[53,32,48,0],[53,35,49,15,"interval"],[53,43,49,23],[54,0,49,23],[54,3]],"functionMap":{"names":["<global>","interval"],"mappings":"AAA;OCmC;CDU"}},"type":"js/module"}]}