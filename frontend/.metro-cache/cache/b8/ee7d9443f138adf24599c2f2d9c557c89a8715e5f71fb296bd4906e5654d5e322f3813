{"dependencies":[{"name":"../Parser.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":38,"index":38}}],"key":"CIJslq/MUqKep4ImmeyUTywuBTk=","exportNames":["*"]}},{"name":"../utils.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":40},"end":{"line":3,"column":51,"index":91}}],"key":"dGswK136diHRCgUa8xpQUn/UMbc=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.AMPMParser = void 0;\n  var _Parser = require(_dependencyMap[0], \"../Parser.js\");\n  var _utils = require(_dependencyMap[1], \"../utils.js\");\n  class AMPMParser extends _Parser.Parser {\n    priority = 80;\n    parse(dateString, token, match) {\n      switch (token) {\n        case \"a\":\n        case \"aa\":\n        case \"aaa\":\n          return match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\"\n          }) || match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\"\n          });\n        case \"aaaaa\":\n          return match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\"\n          });\n        case \"aaaa\":\n        default:\n          return match.dayPeriod(dateString, {\n            width: \"wide\",\n            context: \"formatting\"\n          }) || match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\"\n          }) || match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\"\n          });\n      }\n    }\n    set(date, _flags, value) {\n      date.setHours((0, _utils.dayPeriodEnumToHours)(value), 0, 0, 0);\n      return date;\n    }\n    incompatibleTokens = [\"b\", \"B\", \"H\", \"k\", \"t\", \"T\"];\n  }\n  exports.AMPMParser = AMPMParser;\n});","lineCount":48,"map":[[6,2,1,0],[6,6,1,0,"_Parser"],[6,13,1,0],[6,16,1,0,"require"],[6,23,1,0],[6,24,1,0,"_dependencyMap"],[6,38,1,0],[7,2,3,0],[7,6,3,0,"_utils"],[7,12,3,0],[7,15,3,0,"require"],[7,22,3,0],[7,23,3,0,"_dependencyMap"],[7,37,3,0],[8,2,5,7],[8,8,5,13,"AMPMParser"],[8,18,5,23],[8,27,5,32,"Parser"],[8,41,5,38],[8,42,5,39],[9,4,6,2,"priority"],[9,12,6,10],[9,15,6,13],[9,17,6,15],[10,4,8,2,"parse"],[10,9,8,7,"parse"],[10,10,8,8,"dateString"],[10,20,8,18],[10,22,8,20,"token"],[10,27,8,25],[10,29,8,27,"match"],[10,34,8,32],[10,36,8,34],[11,6,9,4],[11,14,9,12,"token"],[11,19,9,17],[12,8,10,6],[12,13,10,11],[12,16,10,14],[13,8,11,6],[13,13,11,11],[13,17,11,15],[14,8,12,6],[14,13,12,11],[14,18,12,16],[15,10,13,8],[15,17,14,10,"match"],[15,22,14,15],[15,23,14,16,"dayPeriod"],[15,32,14,25],[15,33,14,26,"dateString"],[15,43,14,36],[15,45,14,38],[16,12,15,12,"width"],[16,17,15,17],[16,19,15,19],[16,32,15,32],[17,12,16,12,"context"],[17,19,16,19],[17,21,16,21],[18,10,17,10],[18,11,17,11],[18,12,17,12],[18,16,18,10,"match"],[18,21,18,15],[18,22,18,16,"dayPeriod"],[18,31,18,25],[18,32,18,26,"dateString"],[18,42,18,36],[18,44,18,38],[19,12,19,12,"width"],[19,17,19,17],[19,19,19,19],[19,27,19,27],[20,12,20,12,"context"],[20,19,20,19],[20,21,20,21],[21,10,21,10],[21,11,21,11],[21,12,21,12],[22,8,24,6],[22,13,24,11],[22,20,24,18],[23,10,25,8],[23,17,25,15,"match"],[23,22,25,20],[23,23,25,21,"dayPeriod"],[23,32,25,30],[23,33,25,31,"dateString"],[23,43,25,41],[23,45,25,43],[24,12,26,10,"width"],[24,17,26,15],[24,19,26,17],[24,27,26,25],[25,12,27,10,"context"],[25,19,27,17],[25,21,27,19],[26,10,28,8],[26,11,28,9],[26,12,28,10],[27,8,29,6],[27,13,29,11],[27,19,29,17],[28,8,30,6],[29,10,31,8],[29,17,32,10,"match"],[29,22,32,15],[29,23,32,16,"dayPeriod"],[29,32,32,25],[29,33,32,26,"dateString"],[29,43,32,36],[29,45,32,38],[30,12,33,12,"width"],[30,17,33,17],[30,19,33,19],[30,25,33,25],[31,12,34,12,"context"],[31,19,34,19],[31,21,34,21],[32,10,35,10],[32,11,35,11],[32,12,35,12],[32,16,36,10,"match"],[32,21,36,15],[32,22,36,16,"dayPeriod"],[32,31,36,25],[32,32,36,26,"dateString"],[32,42,36,36],[32,44,36,38],[33,12,37,12,"width"],[33,17,37,17],[33,19,37,19],[33,32,37,32],[34,12,38,12,"context"],[34,19,38,19],[34,21,38,21],[35,10,39,10],[35,11,39,11],[35,12,39,12],[35,16,40,10,"match"],[35,21,40,15],[35,22,40,16,"dayPeriod"],[35,31,40,25],[35,32,40,26,"dateString"],[35,42,40,36],[35,44,40,38],[36,12,41,12,"width"],[36,17,41,17],[36,19,41,19],[36,27,41,27],[37,12,42,12,"context"],[37,19,42,19],[37,21,42,21],[38,10,43,10],[38,11,43,11],[38,12,43,12],[39,6,45,4],[40,4,46,2],[41,4,48,2,"set"],[41,7,48,5,"set"],[41,8,48,6,"date"],[41,12,48,10],[41,14,48,12,"_flags"],[41,20,48,18],[41,22,48,20,"value"],[41,27,48,25],[41,29,48,27],[42,6,49,4,"date"],[42,10,49,8],[42,11,49,9,"setHours"],[42,19,49,17],[42,20,49,18],[42,24,49,18,"dayPeriodEnumToHours"],[42,51,49,38],[42,53,49,39,"value"],[42,58,49,44],[42,59,49,45],[42,61,49,47],[42,62,49,48],[42,64,49,50],[42,65,49,51],[42,67,49,53],[42,68,49,54],[42,69,49,55],[43,6,50,4],[43,13,50,11,"date"],[43,17,50,15],[44,4,51,2],[45,4,53,2,"incompatibleTokens"],[45,22,53,20],[45,25,53,23],[45,26,53,24],[45,29,53,27],[45,31,53,29],[45,34,53,32],[45,36,53,34],[45,39,53,37],[45,41,53,39],[45,44,53,42],[45,46,53,44],[45,49,53,47],[45,51,53,49],[45,54,53,52],[45,55,53,53],[46,2,54,0],[47,2,54,1,"exports"],[47,9,54,1],[47,10,54,1,"AMPMParser"],[47,20,54,1],[47,23,54,1,"AMPMParser"],[47,33,54,1],[48,0,54,1],[48,3]],"functionMap":{"names":["<global>","AMPMParser","parse","set"],"mappings":"AAA;OCI;ECG;GDsC;EEE;GFG;CDG"}},"type":"js/module"}]}