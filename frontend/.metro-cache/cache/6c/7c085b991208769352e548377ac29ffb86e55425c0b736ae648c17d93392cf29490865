{"dependencies":[{"name":"./_lib/normalizeInterval.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":64,"index":64}}],"key":"RgnQ5fGQDzGiH1jMCpSamjCAQN4=","exportNames":["*"]}},{"name":"./addMinutes.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":65},"end":{"line":2,"column":45,"index":110}}],"key":"s7dxRQ5+rZLqB2aItf4QKDpmL0c=","exportNames":["*"]}},{"name":"./constructFrom.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":111},"end":{"line":3,"column":51,"index":162}}],"key":"T7NN9kAXgevBJrbZAUncNw7dQDQ=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  exports.eachMinuteOfInterval = eachMinuteOfInterval;\n  var _normalizeInterval = require(_dependencyMap[0], \"./_lib/normalizeInterval.js\");\n  var _addMinutes = require(_dependencyMap[1], \"./addMinutes.js\");\n  var _constructFrom = require(_dependencyMap[2], \"./constructFrom.js\");\n  /**\n   * The {@link eachMinuteOfInterval} function options.\n   */\n\n  /**\n   * The {@link eachMinuteOfInterval} function result type. It resolves the proper data type.\n   * It uses the first argument date object type, starting from the date argument,\n   * then the start interval date, and finally the end interval date. If\n   * a context function is passed, it uses the context function return type.\n   */\n\n  /**\n   * @name eachMinuteOfInterval\n   * @category Interval Helpers\n   * @summary Return the array of minutes within the specified time interval.\n   *\n   * @description\n   * Returns the array of minutes within the specified time interval.\n   *\n   * @typeParam IntervalType - Interval type.\n   * @typeParam Options - Options type.\n   *\n   * @param interval - The interval.\n   * @param options - An object with options.\n   *\n   * @returns The array with starts of minutes from the minute of the interval start to the minute of the interval end\n   *\n   * @example\n   * // Each minute between 14 October 2020, 13:00 and 14 October 2020, 13:03\n   * const result = eachMinuteOfInterval({\n   *   start: new Date(2014, 9, 14, 13),\n   *   end: new Date(2014, 9, 14, 13, 3)\n   * })\n   * //=> [\n   * //   Wed Oct 14 2014 13:00:00,\n   * //   Wed Oct 14 2014 13:01:00,\n   * //   Wed Oct 14 2014 13:02:00,\n   * //   Wed Oct 14 2014 13:03:00\n   * // ]\n   */\n  function eachMinuteOfInterval(interval, options) {\n    const {\n      start,\n      end\n    } = (0, _normalizeInterval.normalizeInterval)(options?.in, interval);\n    // Set to the start of the minute\n    start.setSeconds(0, 0);\n    let reversed = +start > +end;\n    const endTime = reversed ? +start : +end;\n    let date = reversed ? end : start;\n    let step = options?.step ?? 1;\n    if (!step) return [];\n    if (step < 0) {\n      step = -step;\n      reversed = !reversed;\n    }\n    const dates = [];\n    while (+date <= endTime) {\n      dates.push((0, _constructFrom.constructFrom)(start, date));\n      date = (0, _addMinutes.addMinutes)(date, step);\n    }\n    return reversed ? dates.reverse() : dates;\n  }\n\n  // Fallback for modularized imports:\n  var _default = exports.default = eachMinuteOfInterval;\n});","lineCount":76,"map":[[7,2,1,0],[7,6,1,0,"_normalizeInterval"],[7,24,1,0],[7,27,1,0,"require"],[7,34,1,0],[7,35,1,0,"_dependencyMap"],[7,49,1,0],[8,2,2,0],[8,6,2,0,"_addMinutes"],[8,17,2,0],[8,20,2,0,"require"],[8,27,2,0],[8,28,2,0,"_dependencyMap"],[8,42,2,0],[9,2,3,0],[9,6,3,0,"_constructFrom"],[9,20,3,0],[9,23,3,0,"require"],[9,30,3,0],[9,31,3,0,"_dependencyMap"],[9,45,3,0],[10,2,5,0],[11,0,6,0],[12,0,7,0],[14,2,9,0],[15,0,10,0],[16,0,11,0],[17,0,12,0],[18,0,13,0],[19,0,14,0],[21,2,16,0],[22,0,17,0],[23,0,18,0],[24,0,19,0],[25,0,20,0],[26,0,21,0],[27,0,22,0],[28,0,23,0],[29,0,24,0],[30,0,25,0],[31,0,26,0],[32,0,27,0],[33,0,28,0],[34,0,29,0],[35,0,30,0],[36,0,31,0],[37,0,32,0],[38,0,33,0],[39,0,34,0],[40,0,35,0],[41,0,36,0],[42,0,37,0],[43,0,38,0],[44,0,39,0],[45,0,40,0],[46,0,41,0],[47,0,42,0],[48,0,43,0],[49,0,44,0],[50,2,45,7],[50,11,45,16,"eachMinuteOfInterval"],[50,31,45,36,"eachMinuteOfInterval"],[50,32,45,37,"interval"],[50,40,45,45],[50,42,45,47,"options"],[50,49,45,54],[50,51,45,56],[51,4,46,2],[51,10,46,8],[52,6,46,10,"start"],[52,11,46,15],[53,6,46,17,"end"],[54,4,46,21],[54,5,46,22],[54,8,46,25],[54,12,46,25,"normalizeInterval"],[54,48,46,42],[54,50,46,43,"options"],[54,57,46,50],[54,59,46,52,"in"],[54,61,46,54],[54,63,46,56,"interval"],[54,71,46,64],[54,72,46,65],[55,4,47,2],[56,4,48,2,"start"],[56,9,48,7],[56,10,48,8,"setSeconds"],[56,20,48,18],[56,21,48,19],[56,22,48,20],[56,24,48,22],[56,25,48,23],[56,26,48,24],[57,4,50,2],[57,8,50,6,"reversed"],[57,16,50,14],[57,19,50,17],[57,20,50,18,"start"],[57,25,50,23],[57,28,50,26],[57,29,50,27,"end"],[57,32,50,30],[58,4,51,2],[58,10,51,8,"endTime"],[58,17,51,15],[58,20,51,18,"reversed"],[58,28,51,26],[58,31,51,29],[58,32,51,30,"start"],[58,37,51,35],[58,40,51,38],[58,41,51,39,"end"],[58,44,51,42],[59,4,52,2],[59,8,52,6,"date"],[59,12,52,10],[59,15,52,13,"reversed"],[59,23,52,21],[59,26,52,24,"end"],[59,29,52,27],[59,32,52,30,"start"],[59,37,52,35],[60,4,54,2],[60,8,54,6,"step"],[60,12,54,10],[60,15,54,13,"options"],[60,22,54,20],[60,24,54,22,"step"],[60,28,54,26],[60,32,54,30],[60,33,54,31],[61,4,55,2],[61,8,55,6],[61,9,55,7,"step"],[61,13,55,11],[61,15,55,13],[61,22,55,20],[61,24,55,22],[62,4,56,2],[62,8,56,6,"step"],[62,12,56,10],[62,15,56,13],[62,16,56,14],[62,18,56,16],[63,6,57,4,"step"],[63,10,57,8],[63,13,57,11],[63,14,57,12,"step"],[63,18,57,16],[64,6,58,4,"reversed"],[64,14,58,12],[64,17,58,15],[64,18,58,16,"reversed"],[64,26,58,24],[65,4,59,2],[66,4,61,2],[66,10,61,8,"dates"],[66,15,61,13],[66,18,61,16],[66,20,61,18],[67,4,63,2],[67,11,63,9],[67,12,63,10,"date"],[67,16,63,14],[67,20,63,18,"endTime"],[67,27,63,25],[67,29,63,27],[68,6,64,4,"dates"],[68,11,64,9],[68,12,64,10,"push"],[68,16,64,14],[68,17,64,15],[68,21,64,15,"constructFrom"],[68,49,64,28],[68,51,64,29,"start"],[68,56,64,34],[68,58,64,36,"date"],[68,62,64,40],[68,63,64,41],[68,64,64,42],[69,6,65,4,"date"],[69,10,65,8],[69,13,65,11],[69,17,65,11,"addMinutes"],[69,39,65,21],[69,41,65,22,"date"],[69,45,65,26],[69,47,65,28,"step"],[69,51,65,32],[69,52,65,33],[70,4,66,2],[71,4,68,2],[71,11,68,9,"reversed"],[71,19,68,17],[71,22,68,20,"dates"],[71,27,68,25],[71,28,68,26,"reverse"],[71,35,68,33],[71,36,68,34],[71,37,68,35],[71,40,68,38,"dates"],[71,45,68,43],[72,2,69,0],[74,2,71,0],[75,2,71,0],[75,6,71,0,"_default"],[75,14,71,0],[75,17,71,0,"exports"],[75,24,71,0],[75,25,71,0,"default"],[75,32,71,0],[75,35,72,15,"eachMinuteOfInterval"],[75,55,72,35],[76,0,72,35],[76,3]],"functionMap":{"names":["<global>","eachMinuteOfInterval"],"mappings":"AAA;OC4C;CDwB"}},"type":"js/module"}]}